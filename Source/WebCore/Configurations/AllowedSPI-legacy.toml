# Longstanding SPI used by WebCore before we started auditing SPI use.
# NEVER add to this list, only remove!

[[legacy]]
classes = [
    "CTEmojiImageAsset",
    "CTEmojiImageStrike",
]
selectors = [
    { name = "alignmentInset", class = "?" },
    { name = "cgImage", class = "?" },
    { name = "initWithContentIdentifier:shortDescription:strikeImages:", class = "?" },
    { name = "initWithImage:alignmentInset:provenanceInfo:", class = "?" },
    { name = "provenance", class = "?" },
    { name = "strikes", class = "?" },
]
requires = ["ENABLE_MULTI_REPRESENTATION_HEIC"]

# This is SPI, but it's marked as public on 26.x releases due to rdar://148943382.
[[legacy]]
selectors = [
    { name = "isSystemVoice", class = "?" },
]
requires = ["!SDKDB_HAS_148943382"]

[[legacy]]
classes = [
    "WCRBrowserEngineClient",
]
selectors = [
    { name = "allowURL:withCompletion:", class = "?" },
    { name = "evaluateURL:withCompletion:onCompletionQueue:", class = "?" },
    { name = "shouldEvaluateURLs", class = "?" },
]
requires = ["HAVE_WEBCONTENTRESTRICTIONS"]

[[legacy]]
selectors = [
    { name = "_getCookiesForPartition:completionHandler:", class = "?" },
]
requires = ["HAVE_ALLOW_ONLY_PARTITIONED_COOKIES"]

[[legacy]]
symbols = [
    "CGImageGetContentAverageLightLevelNits",
    "kCGConstrainedDynamicRange",
    "kCGContentEDRStrength",
]
requires = ["HAVE_SUPPORT_HDR_DISPLAY_APIS"]
[[legacy]]
classes = [
    "LockdownModeManager",
]
requires = ["HAVE_LOCKDOWN_MODE_FRAMEWORK"]

# The public iOS build uses CGGeometry methods instead of internal only
# NSGeometry methods. Clean up in rdar://6669434.
[[legacy]]
symbols = [
    "NSEqualRects",
]
requires = ["USE_APPLE_INTERNAL_SDK"]

[[legacy]]
selectors = [
    { name = "_setTitle:", class = "?" },
    { name = "_title", class = "?" },
]
requires = ["!HAVE_LINK_PRESENTATION_CHANGE_FOR_RADAR_115801517"]

# ------------------------------------------------------------------------
# Below are uncategorized and unconditionally used SPI introduced in older
# releases.
# ------------------------------------------------------------------------

[[legacy]]
selectors = [
    { name = "borderColorForEdge:", class = "?" },
    { name = "collapsesBorders", class = "?" },
    { name = "hidesEmptyCells", class = "?" },
    { name = "layoutAlgorithm", class = "?" },
    { name = "setBrowserAuditToken:", class = "?" },
    { name = "transferVideoViewTo:", class = "?" },
    { name = "valueForDimension:", class = "?" },
    { name = "verticalAlignment", class = "?" },
    { name = "widthForLayer:edge:", class = "?" },
]
symbols = [
    "CAIOSurfaceReloadColorAttributes",
    "CGIOSurfaceContextInvalidateSurface",
    "CGPathAddContinuousRoundedRect",
    "kCAFilterColorBlendMode",
    "kCAFilterHueBlendMode",
    "kCAFilterLuminosityBlendMode",
    "kCAFilterSaturationBlendMode",
    "kCVPixelBufferPreferRealTimeCacheModeIfEveryoneDoesKey",
]

[[legacy]]
selectors = [
    # In cross-platform cocoa code, but dead-stripped unless ENABLE_WEBXR is active.
    { name = "newSharedEventWithMachPort:", class = "?" },
]
requires = ["!NDEBUG"]

[[legacy]]
symbols = [
    "CGIOSurfaceContextGetSurface",
]
requires = ["ASSERT_ENABLED"]

[[legacy]]
selectors = [
    { name = "initWithWebsiteIdentifier:", class = "?" },
]
requires = ["USE_APPLE_INTERNAL_SDK"]

[[legacy]]
classes = [
    "AVAssetCollection",
    "AVContentKeyReportGroup",
    "AVOutputContext",
    "AVPlayerController",
    "AVStreamDataParser",
    "AVSystemController",
    "AVValueTiming",
    "CABackdropLayer",
    "CAFilter",
    "CALayerHost",
    "CPNetworkObserver",
    "DDContextMenuAction",
    "DDContextMenuConfiguration",
    "DDDetectionController",
    "DDScannerResult",
    "LPFileMetadata",
    "LSBundleProxy",
    "LTUISourceMeta",
    "LTUITranslationViewController",
    "MCProfileConnection",
    "NEFilterSource",
    "NSColor",
    "NSTextTable",
    "NSTextTableBlock",
    "NSURLFileTypeMappings",
    "PKDisbursementPaymentRequest",
    "PKPaymentInstallmentConfiguration",
    "PKPaymentInstallmentItem",
    "PKPaymentSetupConfiguration",
    "PKPaymentSetupController",
    "PKPaymentSetupFeature",
    "PKPaymentSetupRequest",
    "PKPaymentSetupViewController",
    "PKShippingMethods",
    "QLItem",
    "QLPreviewConverter",
    "RSABSSATokenBlinder",
    "RVItem",
    "RVPresenter",
    "RVPresentingContext",
    "RVSelection",
    "SBSStatusBarStyleOverridesAssertion",
    "SBSStatusBarStyleOverridesCoordinator",
    "SOAuthorization",
    "SOAuthorizationHints",
    "SOAuthorizationHintsCore",
    "STDynamicActivityAttributionPublisher",
    "UIFocusRingStyle",
    "UITextEffectsWindow",
    "VKCImageAnalysis",
    "VKCImageAnalysisInteraction",
    "VKCImageAnalysisOverlayView",
    "VKCImageAnalyzer",
    "VKCImageAnalyzerRequest",
    "VKCRemoveBackgroundRequest",
    "VKCRemoveBackgroundRequestHandler",
    "VKCRemoveBackgroundResult",
    "VKImageAnalyzer",
    "VKImageAnalyzerRequest",
    "WPLinkFilteringData",
    "WPResourceRequestOptions",
    "WPResources",
    "WPStorageAccessPromptQuirk",
    "WPStorageAccessPromptQuirksData",
    "WPStorageAccessUserAgentStringQuirkData",
    "WebFilterEvaluator",
    "__AVPlayerLayerView",
]
selectors = [
    { name = "MIMETypeForExtension:", class = "?" },
    { name = "RTFDFromRange:documentAttributes:", class = "?" },
    { name = "RTFFromRange:documentAttributes:", class = "?" },
    { name = "URLSession", class = "?" },
    { name = "URLSessionDataDelegate", class = "?" },
    { name = "URLSessionDataDelegateQueue", class = "?" },
    { name = "_CFCachedURLResponse", class = "?" },
    { name = "_CFURLRequest", class = "?" },
    { name = "_CFURLResponse", class = "?" },
    { name = "_GetInternalCFHTTPCookie", class = "?" },
    { name = "__openXPC_and_CBApplicationDidBecomeActive__", class = "?" },
    { name = "_accessibilityUnregister", class = "?" },
    { name = "_attributedStringForRange:", class = "?" },
    { name = "_cf2nsCookies:", class = "?" },
    { name = "_classicMode", class = "?" },
    { name = "_cookieForSetCookieString:forURL:partition:", class = "?" },
    { name = "_cookieStorage", class = "?" },
    { name = "_didFinishScrollingOrZooming", class = "?" },
    { name = "_disambiguated_due_to_CIImage_colorWithCGColor:", class = "?" },
    { name = "_dispatchTileDidDraw:", class = "?" },
    { name = "_getCookiesForDomain:", class = "?" },
    { name = "_getCookiesForURL:mainDocumentURL:partition:policyProperties:completionHandler:", class = "?" },
    { name = "_hardwareKeyboard", class = "?" },
    { name = "_htmlDocumentFragmentString:documentAttributes:subresources:", class = "?" },
    { name = "_initWithCFCachedURLResponse:", class = "?" },
    { name = "_initWithCFHTTPCookieStorage:", class = "?" },
    { name = "_initWithCFURLRequest:", class = "?" },
    { name = "_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:", class = "?" },
    { name = "_initializeScriptDOMNodeImp", class = "?" },
    { name = "_isClassic", class = "?" },
    { name = "_isHostedInAnotherProcess", class = "?" },
    { name = "_performAsDataOwner:block:", class = "?" },
    { name = "_privacyProxyFailClosedForUnreachableNonMainHosts", class = "?" },
    { name = "_propertyForKey:", class = "?" },
    { name = "_protocolClassForRequest:skipAppSSO:", class = "?" },
    { name = "_referenceBounds", class = "?" },
    { name = "_saveCookies:", class = "?" },
    { name = "_scheduleRenderingUpdateForPendingTileCacheRepaint", class = "?" },
    { name = "_schemeWasUpgradedDueToDynamicHSTS", class = "?" },
    { name = "_setCookies:forURL:mainDocumentURL:policyProperties:", class = "?" },
    { name = "_setCookiesChangedHandler:onQueue:", class = "?" },
    { name = "_setCookiesRemovedHandler:onQueue:", class = "?" },
    { name = "_setIdleTimerDisabled:forReason:", class = "?" },
    { name = "_setIgnoreAppSupportedOrientations:", class = "?" },
    { name = "_setMIMEType:", class = "?" },
    { name = "_setMaximumRecognitionDuration:", class = "?" },
    { name = "_setPreventsSleepDuringVideoPlayback:", class = "?" },
    { name = "_setPrivacyProxyFailClosedForUnreachableNonMainHosts:", class = "?" },
    { name = "_setProperty:forKey:", class = "?" },
    { name = "_setSubscribedDomainsForCookieChanges:", class = "?" },
    { name = "_setSuppressesAudioRendering:", class = "?" },
    { name = "_setUseEnhancedPrivacyMode:", class = "?" },
    { name = "_standardMarkerAttributesForAttributes:", class = "?" },
    { name = "_storagePartition", class = "?" },
    { name = "_strictlyUnarchivedObjectOfClasses:fromData:error:", class = "?" },
    { name = "_useEnhancedPrivacyMode", class = "?" },
    { name = "_web_URLWithString:relativeToURL:", class = "?" },
    { name = "_web_createFileAtPath:contents:attributes:", class = "?" },
    { name = "_web_localizedDescription", class = "?" },
    { name = "_webcore_releaseOnWebThread", class = "?" },
    { name = "_webcore_releaseWithWebThreadLock", class = "?" },
    { name = "_willStartScrollingOrZooming", class = "?" },
    { name = "acquireWithHandler:invalidationHandler:", class = "?" },
    { name = "activateTokenWithServerResponse:error:", class = "?" },
    { name = "addData:", class = "?" },
    { name = "addNetworkReachableObserver:selector:", class = "?" },
    { name = "addStreamDataParser:", class = "?" },
    { name = "alphaComponent", class = "?" },
    { name = "alphaThreshold", class = "?" },
    { name = "appendStreamData:", class = "?" },
    { name = "appendStreamData:withFlags:", class = "?" },
    { name = "applicationMetadata", class = "?" },
    { name = "apr", class = "?" },
    { name = "assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:", class = "?" },
    { name = "assetCacheWithURL:", class = "?" },
    { name = "attributeKeys", class = "?" },
    { name = "bindToken", class = "?" },
    { name = "bindingTotalAmount", class = "?" },
    { name = "blindedMessage", class = "?" },
    { name = "borderThickness", class = "?" },
    { name = "bundleProxyWithAuditToken:error:", class = "?" },
    { name = "canParseExtendedMIMEType:", class = "?" },
    { name = "colorWithCalibratedRed:green:blue:alpha:", class = "?" },
    { name = "columnSpan", class = "?" },
    { name = "containsAttachments", class = "?" },
    { name = "contentDispositionEncodingFallbackArray", class = "?" },
    { name = "coreResult", class = "?" },
    { name = "createFencePort", class = "?" },
    { name = "createPluginBindingsInstance:", class = "?" },
    { name = "currentTimeStamp", class = "?" },
    { name = "currentValue", class = "AVValueTiming" },
    { name = "dataComplete", class = "?" },
    { name = "defaultContentKeyGroup", class = "?" },
    { name = "deviceFeatures", class = "?" },
    { name = "document:attachment:forURL:", class = "?" },
    { name = "earliestAvailablePixelBufferItemTime", class = "?" },
    { name = "eligibleForBTSmartRoutingConsideration", class = "?" },
    { name = "extensionsForMIMEType:", class = "?" },
    { name = "feature", class = "?" },
    { name = "filterRequired", class = "?" },
    { name = "filterState", class = "?" },
    { name = "filterWithType:", class = "?" },
    { name = "finalizeForWebScript", class = "?" },
    { name = "finishConverting", class = "?" },
    { name = "finishedAppendingData", class = "?" },
    { name = "finishedLoadingWithDecisionHandler:", class = "?" },
    { name = "fontWithFamilyName:traits:size:", class = "?" },
    { name = "highlightRange", class = "?" },
    { name = "initAuxiliarySession", class = "?" },
    { name = "initWithAssumedIdentity:", class = "?" },
    { name = "initWithConnection:delegate:response:options:", class = "?" },
    { name = "initWithData:name:uti:options:", class = "?" },
    { name = "initWithDecisionQueue:", class = "?" },
    { name = "initWithFileType:error:", class = "?" },
    { name = "initWithFileWrapper:", class = "?" },
    { name = "initWithMediaEnvironment:", class = "?" },
    { name = "initWithPlayerLayerView:", class = "?" },
    { name = "initWithPublicKey:error:", class = "?" },
    { name = "initWithRTF:documentAttributes:", class = "?" },
    { name = "initWithRTFD:documentAttributes:", class = "?" },
    { name = "initWithResponse:", class = "?" },
    { name = "initWithStorageDirectoryAtURL:", class = "?" },
    { name = "initWithTable:startingRow:rowSpan:startingColumn:columnSpan:", class = "?" },
    { name = "initWithText:selectedRange:", class = "?" },
    { name = "initWithType:location:", class = "?" },
    { name = "installmentAuthorizationToken", class = "?" },
    { name = "installmentItemType", class = "?" },
    { name = "installmentItems", class = "?" },
    { name = "installmentMerchantIdentifier", class = "?" },
    { name = "invokeDefaultMethodWithArguments:", class = "?" },
    { name = "invokeUndefinedMethodFromWebScript:withArguments:", class = "?" },
    { name = "isInStorePurchase", class = "?" },
    { name = "isKeyExcludedFromWebScript:", class = "?" },
    { name = "isManagedSession", class = "?" },
    { name = "isNetworkReachable", class = "?" },
    { name = "isPlayableExtendedMIMEType:options:", class = "?" },
    { name = "isSelectorExcludedFromWebScript:", class = "?" },
    { name = "keyId", class = "?" },
    { name = "lastModifiedDateOfEntryForKey:", class = "?" },
    { name = "makeContentKeyGroup", class = "?" },
    { name = "maxAlpha", class = "?" },
    { name = "merchandisingImageData", class = "?" },
    { name = "objectForWebScript", class = "?" },
    { name = "openToBuyThresholdAmount", class = "?" },
    { name = "optionID", class = "?" },
    { name = "outputContextForID:", class = "?" },
    { name = "outputDevice", class = "?" },
    { name = "outputDevices", class = "?" },
    { name = "outputMIMECodecParameterForInputMIMECodecParameter:", class = "?" },
    { name = "pictureInPicturePlayerLayerView", class = "?" },
    { name = "pointValue", class = "?" },
    { name = "preferredExtensionForMIMEType:", class = "?" },
    { name = "previewFileName", class = "?" },
    { name = "previewRequest", class = "?" },
    { name = "previewResponse", class = "?" },
    { name = "previewUTI", class = "?" },
    { name = "processContentKeyRequestInitializationData:options:", class = "?" },
    { name = "processContentKeyResponseData:", class = "?" },
    { name = "programIdentifier", class = "?" },
    { name = "programTerms", class = "?" },
    { name = "providePendingMediaData", class = "?" },
    { name = "receivedData:decisionHandler:", class = "?" },
    { name = "receivedResponse:decisionHandler:", class = "?" },
    { name = "referrerIdentifier", class = "?" },
    { name = "regionBeingDrawn", class = "?" },
    { name = "registerForPostingNotificationsWithContext:", class = "?" },
    { name = "reloadValueForKeyPath:", class = "?" },
    { name = "remediateWithDecisionHandler:", class = "?" },
    { name = "removeEntryForKey:", class = "?" },
    { name = "removeStreamDataParser:", class = "?" },
    { name = "requestNotificationOfMediaDataChangeAsSoonAsPossible", class = "?" },
    { name = "resolvedURL", class = "?" },
    { name = "resultsFromCoreResults:", class = "?" },
    { name = "retailChannel", class = "?" },
    { name = "revealRangeAtIndex:selectedRanges:shouldUpdateSelection:", class = "?" },
    { name = "routingContextUID", class = "?" },
    { name = "rowSpan", class = "?" },
    { name = "safeRequestForRequest:", class = "?" },
    { name = "scrollView:shouldScrollToPoint:", class = "?" },
    { name = "setAllowsHitTesting:", class = "?" },
    { name = "setApplicationMetadata:", class = "?" },
    { name = "setApr:", class = "?" },
    { name = "setAttribute:forKey:error:", class = "?" },
    { name = "setAuditTokensForProcessAssertion:error:", class = "?" },
    { name = "setBindingTotalAmount:", class = "?" },
    { name = "setBorderColor:forEdge:", class = "?" },
    { name = "setCollapsesBorders:", class = "?" },
    { name = "setContentDispositionEncodingFallbackArray:", class = "?" },
    { name = "setContentsOpaque:", class = "?" },
    { name = "setContextId:", class = "?" },
    { name = "setDefersCallbacks:", class = "?" },
    { name = "setDetectMultipleUtterances:", class = "?" },
    { name = "setEligibleForBTSmartRoutingConsideration:error:", class = "?" },
    { name = "setFeature:", class = "?" },
    { name = "setFencePort:", class = "?" },
    { name = "setHeaderLevel:", class = "?" },
    { name = "setHidesEmptyCells:", class = "?" },
    { name = "setHostProcessAttribution:error:", class = "?" },
    { name = "setInStorePurchase:", class = "?" },
    { name = "setInstallmentItemType:", class = "?" },
    { name = "setInstallmentItems:", class = "?" },
    { name = "setInstallmentMerchantIdentifier:", class = "?" },
    { name = "setLayoutAlgorithm:", class = "?" },
    { name = "setMerchandisingImageData:", class = "?" },
    { name = "setNeedsLayoutOnGeometryChange:", class = "?" },
    { name = "setOpenToBuyThresholdAmount:", class = "?" },
    { name = "setPIPModeEnabled:", class = "?" },
    { name = "setPreferSandboxedParsing:", class = "?" },
    { name = "setPreservesFlip:", class = "?" },
    { name = "setProgramIdentifier:", class = "?" },
    { name = "setProgramTerms:", class = "?" },
    { name = "setReferrerIdentifier:", class = "?" },
    { name = "setRegisteredStyleOverrides:reply:", class = "?" },
    { name = "setResourceConservationLevelWhilePaused:", class = "?" },
    { name = "setRetailChannel:", class = "?" },
    { name = "setSortsSublayers:", class = "?" },
    { name = "setSourceAppIdentifier:", class = "?" },
    { name = "setSourceAppPid:", class = "?" },
    { name = "setTextBlocks:", class = "?" },
    { name = "setThumbstickUserIntentHandler:", class = "?" },
    { name = "setToneMapToStandardDynamicRange:", class = "?" },
    { name = "setURLSession:", class = "?" },
    { name = "setUsesWebKitBehavior:", class = "?" },
    { name = "setValue:type:forDimension:", class = "?" },
    { name = "setVerticalAlignment:", class = "NSTextBlock" },
    { name = "setVideoView:", class = "?" },
    { name = "setWidth:type:forLayer:edge:", class = "?" },
    { name = "sharedAVSystemController", class = "?" },
    { name = "sharedAudioPresentationOutputContext", class = "?" },
    { name = "sharedMappings", class = "?" },
    { name = "sharedNetworkObserver", class = "?" },
    { name = "sharedTextEffectsWindowForWindowScene:", class = "?" },
    { name = "signature", class = "RSABSSATokenReady" },
    { name = "sizeValue", class = "?" },
    { name = "speechVoicesIncludingSuperCompact", class = "?" },
    { name = "startRoutingVideoToPictureInPicturePlayerLayerView", class = "?" },
    { name = "startingColumn", class = "?" },
    { name = "startingRow", class = "?" },
    { name = "stopRoutingVideoToPictureInPicturePlayerLayerView", class = "?" },
    { name = "supportedOptions", class = "?" },
    { name = "supportsMultipleOutputDevices", class = "?" },
    { name = "table", class = "?" },
    { name = "tableCellDefaultSelectionTintColor", class = "?" },
    { name = "textBlocks", class = "?" },
    { name = "tokenContent", class = "?" },
    { name = "tokenWaitingActivationWithContent:error:", class = "?" },
    { name = "unblockWithCompletion:", class = "?" },
    { name = "valueForTimeStamp:", class = "?" },
    { name = "valueTimingWithAnchorValue:anchorTimeStamp:rate:", class = "?" },
    { name = "valueWithCAColorMatrix:", class = "?" },
    { name = "valueWithRect:", class = "?" },
    { name = "videoPerformanceMetrics", class = "?" },
    { name = "videoView", class = "?" },
    { name = "viewControllerForView:", class = "?" },
    { name = "webScriptNameForKey:", class = "?" },
    { name = "webScriptNameForSelector:", class = "?" },
    { name = "willSendRequest:decisionHandler:", class = "?" },
]
symbols = [
    "AVAssetPrefersSandboxedParsingOptionKey",
    "AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout",
    "AVController_RouteDescriptionKey_AVAudioRouteName",
    "AVController_RouteDescriptionKey_RouteCurrentlyPicked",
    "AVController_RouteDescriptionKey_RouteName",
    "AVOutOfBandAlternateTrackDisplayNameKey",
    "AVOutOfBandAlternateTrackExtendedLanguageTagKey",
    "AVOutOfBandAlternateTrackIdentifierKey",
    "AVOutOfBandAlternateTrackIsDefaultKey",
    "AVOutOfBandAlternateTrackMediaCharactersticsKey",
    "AVOutOfBandAlternateTrackSourceKey",
    "AVStreamDataParserContentKeyRequestProtocolVersionsKey",
    "AVSystemController_PIDToInheritApplicationStateFrom",
    "AVSystemController_ServerConnectionDiedNotification",
    "AVURLAssetAllowableAudioCodecTypesKey",
    "AVURLAssetAllowableCaptionFormatsKey",
    "AVURLAssetAllowableTypeCategoriesKey",
    "AVURLAssetAllowableVideoCodecTypesKey",
    "AVURLAssetBoundNetworkInterfaceName",
    "AVURLAssetCacheKey",
    "AVURLAssetClientBundleIdentifierKey",
    "AVURLAssetDoNotLogURLsKey",
    "AVURLAssetExtendedMIMETypePlayabilityTreatPlaylistMIMETypesAsISOBMFFMediaDataContainersKey",
    "AVURLAssetInheritURIQueryComponentFromReferencingURIKey",
    "AVURLAssetOutOfBandAlternateTracksKey",
    "AVURLAssetOutOfBandMIMETypeKey",
    "AVURLAssetRequiresCustomURLLoadingKey",
    "AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests",
    "AVURLAssetUseClientURLLoadingExclusively",
    "AVURLAssetUsesNoPersistentCacheKey",
    "AVVideoRangeDolbyVisionPQ",
    "AVVideoRangeHDR10",
    "AudioComponentApplyServerRegistrations",
    "AudioComponentFetchServerRegistrations",
    "AudioDeviceDuck",
    "AudioGetDeviceSpatialPreferencesForContentType",
    "CAIOSurfaceCreate",
    "CCCryptorGCM",
    "CCCryptorGCMOneshotDecrypt",
    "CCDeriveKey",
    "CCECCryptorComputeSharedSecret",
    "CCECCryptorExportKey",
    "CCECCryptorGeneratePair",
    "CCECCryptorImportKey",
    "CCECCryptorRelease",
    "CCKDFParametersCreateHkdf",
    "CCKDFParametersDestroy",
    "CCRSACryptorCreateFromData",
    "CCRSACryptorDecrypt",
    "CCRSACryptorEncrypt",
    "CCRSACryptorExport",
    "CCRSACryptorGeneratePair",
    "CCRSACryptorGetPublicKeyFromPrivateKey",
    "CCRSACryptorImport",
    "CCRSACryptorRelease",
    "CCRSACryptorSign",
    "CCRSACryptorVerify",
    "CCRSAGetCRTComponents",
    "CCRSAGetCRTComponentsSizes",
    "CCRSAGetKeyComponents",
    "CCRSAGetKeyType",
    "CFHTTPCookieStorageCopyCookies",
    "CFHTTPCookieStorageDeleteAllCookies",
    "CFHTTPCookieStorageDeleteCookie",
    "CFHTTPCookieStorageGetCookieAcceptPolicy",
    "CFHTTPCookieStorageSetCookieAcceptPolicy",
    "CFReadStreamCreate",
    "CFReadStreamSignalEvent",
    "CFURLCacheCopyResponseForRequest",
    "CFURLCacheCopySharedURLCache",
    "CFURLCacheMemoryCapacity",
    "CFURLCacheSetDiskCapacity",
    "CFURLCacheSetMemoryCapacity",
    "CFURLRequestCreateMutableCopy",
    "CFURLRequestGetRequestPriority",
    "CFURLRequestSetHTTPRequestBody",
    "CFURLRequestSetHTTPRequestBodyStream",
    "CFURLRequestSetRequestPriority",
    "CFURLRequestSetShouldPipelineHTTP",
    "CFURLRequestSetShouldStartSynchronously",
    "CFURLResponseCopySuggestedFilename",
    "CFURLResponseGetHTTPResponse",
    "CFURLResponseGetMIMEType",
    "CFURLResponseGetURL",
    "CFURLResponseSetMIMEType",
    "CGColorSpaceCopyICCProfileDescription",
    "CGColorSpaceEqualToColorSpace",
    "CGColorTransformConvertColorComponents",
    "CGColorTransformCreate",
    "CGContextCopyDeviceColorSpace",
    "CGContextCreateWithDelegate",
    "CGContextDelegateCreate",
    "CGContextDelegateGetInfo",
    "CGContextDelegateSetCallback",
    "CGContextDrawPDFPageWithAnnotations",
    "CGContextDrawPathDirect",
    "CGContextGetBaseCTM",
    "CGContextGetCompositeOperation",
    "CGContextGetFillColorAsColor",
    "CGContextGetFontAntialiasingStyle",
    "CGContextGetShouldAntialias",
    "CGContextGetStrokeColorAsColor",
    "CGContextGetType",
    "CGContextSetBaseCTM",
    "CGContextSetCTM",
    "CGContextSetCompositeOperation",
    "CGContextSetFontAntialiasingStyle",
    "CGContextSetOwnerIdentity",
    "CGContextSetShouldAntialiasFonts",
    "CGContextSetStyle",
    "CGGStateGetAlpha",
    "CGGStateGetCTM",
    "CGGStateGetFillColor",
    "CGGStateGetFont",
    "CGGStateGetFontSize",
    "CGGStateGetStrokeColor",
    "CGGStateGetStyle",
    "CGGradientCreateWithColorComponentsAndOptions",
    "CGIOSurfaceContextCreate",
    "CGIOSurfaceContextCreateImage",
    "CGIOSurfaceContextCreateImageReference",
    "CGIOSurfaceContextGetColorSpace",
    "CGImageGetCachingFlags",
    "CGImageSetCachingFlags",
    "CGImageSetProperty",
    "CGImageSourceGetTypeWithData",
    "CGPathAddUnevenCornersRoundedRect",
    "CGPatternCreateWithImage2",
    "CGSNextRect",
    "CGSRegionEnumerator",
    "CGSReleaseRegionEnumerator",
    "CGShadingCreateConic",
    "CGStyleCreateColorMatrix",
    "CGStyleCreateFocusRingWithColor",
    "CGStyleCreateGaussianBlur",
    "CGStyleCreateShadow2",
    "CGStyleGetColor",
    "CGStyleGetData",
    "CGStyleGetType",
    "CTFontCopyColorGlyphCoverage",
    "CTFontCopyGlyphCoverageForFeature",
    "CTFontCreateForCharactersWithLanguageAndOption",
    "CTFontDescriptorCreateForCSSFamily",
    "CTFontDescriptorCreateForUIType",
    "CTFontDescriptorCreateLastResort",
    "CTFontDescriptorCreateWithAttributesAndOptions",
    "CTFontDescriptorCreateWithTextStyle",
    "CTFontDescriptorCreateWithTextStyleAndAttributes",
    "CTFontDescriptorGetOptions",
    "CTFontDescriptorGetTextStyleSize",
    "CTFontDescriptorIsSystemUIFont",
    "CTFontGetAccessibilityBoldWeightOfWeight",
    "CTFontGetGlyphsForCharacterRange",
    "CTFontGetPhysicalSymbolicTraits",
    "CTFontGetSbixImageSizeForGlyphAndContentsScale",
    "CTFontGetVerticalGlyphsForCharacters",
    "CTFontIsAppleColorEmoji",
    "CTFontIsSystemUIFont",
    "CTFontManagerCreateMemorySafeFontDescriptorFromData",
    "CTFontShapeGlyphs",
    "CTLineCreateWithUniCharProvider",
    "CTParagraphStyleSetCompositionLanguage",
    "CTRunGetInitialAdvance",
    "CTTypesetterCreateWithUniCharProviderAndOptions",
    "DDBinderEmailKey",
    "DDBinderFlightInformationKey",
    "DDBinderGenericURLKey",
    "DDBinderHttpURLKey",
    "DDBinderMailURLKey",
    "DDBinderParsecSourceKey",
    "DDBinderSignatureBlockKey",
    "DDBinderTrackingNumberKey",
    "DDBinderWebURLKey",
    "DDDFACacheCreateFromFramework",
    "DDDFAScannerCreateFromCache",
    "DDDFAScannerFirstResultInUnicharArray",
    "DDResultDisableURLSchemeChecking",
    "DDResultGetCategory",
    "DDResultGetQueryRangeForURLification",
    "DDResultGetSubResults",
    "DDResultGetType",
    "DDResultHasProperties",
    "DDResultIsPastDate",
    "DDScanQueryAddLineBreak",
    "DDScanQueryAddSeparator",
    "DDScanQueryAddTextFragment",
    "DDScanQueryCreate",
    "DDScanQueryCreateFromString",
    "DDScanQueryGetFragmentMetaData",
    "DDScannerCopyResultsOptionsForPassiveUse",
    "DDScannerCopyResultsWithOptions",
    "DDScannerCreate",
    "DDScannerEnableOptionalSource",
    "DDScannerScanQuery",
    "DDScannerSetQOS",
    "DDShouldImmediatelyShowActionSheetForResult",
    "DDShouldImmediatelyShowActionSheetForURL",
    "DDShouldUseLightLinksForResult",
    "DDURLStringForResult",
    "DDURLTapAndHoldSchemes",
    "FPFontCopyPostScriptName",
    "FPFontCopySFNTData",
    "FPFontCreateFontsFromData",
    "FigPhotoDecompressionSetHardwareCutoff",
    "FigThreadRegisterAbortAction",
    "FigThreadUnregisterAbortAction",
    "FigVideoTargetCreateWithVideoReceiverEndpointID",
    "GSEventIsHardwareKeyboardAttached",
    "GSFontInitialize",
    "GSFontPurgeFontCache",
    "GSKeyboardGetModifierState",
    "IOPMAssertionCreateWithDescription",
    "IOPMAssertionRelease",
    "IOPSCopyPowerSourcesInfo",
    "IOPSCopyPowerSourcesList",
    "IOPSGetPowerSourceDescription",
    "IOSurfaceAcceleratorCreate",
    "IOSurfaceAcceleratorGetRunLoopSource",
    "IOSurfaceAcceleratorTransformSurface",
    "MAAudibleMediaPrefCopyPreferDescriptiveVideo",
    "MACaptionAppearanceCopyFontDescriptorWithStrokeForStyle",
    "MAImageCaptioningCopyCaptionWithSource",
    "MCFeatureDefinitionLookupAllowed",
    "MGCopyAnswer",
    "MGGetBoolAnswer",
    "MGGetFloat32Answer",
    "MGGetSInt32Answer",
    "MRMediaRemoteAddAsyncCommandHandlerBlock",
    "MRMediaRemoteCommandInfoCreate",
    "MRMediaRemoteCommandInfoSetCommand",
    "MRMediaRemoteCommandInfoSetEnabled",
    "MRMediaRemoteCommandInfoSetOptions",
    "MRMediaRemoteCopyPickableRoutes",
    "MRMediaRemoteGetLocalOrigin",
    "MRMediaRemoteRemoveCommandHandlerBlock",
    "MRMediaRemoteSetCanBeNowPlayingApplication",
    "MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin",
    "MRMediaRemoteSetNowPlayingInfo",
    "MRMediaRemoteSetNowPlayingInfoWithMergePolicy",
    "MRMediaRemoteSetNowPlayingVisibility",
    "MRMediaRemoteSetParentApplication",
    "MRMediaRemoteSetSupportedCommands",
    "MTEnableCaption2015Behavior",
    "MTOverrideShouldPlayHDRVideo",
    "MTShouldPlayHDRVideo",
    "MT_GetShouldPlayHDRVideoNotificationSingleton",
    "NSAuthorDocumentAttribute",
    "NSCommentDocumentAttribute",
    "NSCompanyDocumentAttribute",
    "NSConvertedDocumentAttribute",
    "NSCopyrightDocumentAttribute",
    "NSCreationTimeDocumentAttribute",
    "NSDisplayNameDocumentAttribute",
    "NSEditorDocumentAttribute",
    "NSGeneratorDocumentAttribute",
    "NSKeywordsDocumentAttribute",
    "NSLocalizedFileSizeDescription",
    "NSModificationTimeDocumentAttribute",
    "NSNoIndexDocumentAttribute",
    "NSSubjectDocumentAttribute",
    "NSURLAuthenticationMethodOAuth",
    "OTSVGTableCreateFromData",
    "OTSVGTableGetDocumentIndexForGlyph",
    "OTSVGTableRelease",
    "PKApplePayButtonDefaultCornerRadius",
    "PKCanMakePaymentsWithMerchantIdentifierAndDomain",
    "PKCanMakePaymentsWithMerchantIdentifierDomainAndSourceApplication",
    "PKDrawApplePayButtonWithCornerRadius",
    "QLPreviewGetSupportedMIMETypes",
    "QLTypeCopyBestMimeTypeForFileNameAndMimeType",
    "QLTypeCopyBestMimeTypeForURLAndMimeType",
    "QLTypeCopyUTIForURLAndMimeType",
    "SOAuthorizationOptionInitiatingAction",
    "SOAuthorizationOptionInitiatorOrigin",
    "SOAuthorizationOptionUserActionInitiated",
    "SOErrorDomain",
    "SecCertificateGetSignatureHashAlgorithm",
    "SecTrustDeserialize",
    "SecTrustSerialize",
    "SecTrustSetClientAuditToken",
    "UIAccessibilityAcceptedInlineTextCompletion",
    "UIAccessibilityInlineTextCompletion",
    "UIAccessibilityTokenAttachment",
    "UIAccessibilityTokenBlockquoteLevel",
    "UIAccessibilityTokenBold",
    "UIAccessibilityTokenFontFamily",
    "UIAccessibilityTokenFontName",
    "UIAccessibilityTokenFontSize",
    "UIAccessibilityTokenItalic",
    "UIAccessibilityTokenLanguage",
    "UIAccessibilityTokenUnderline",
    "UITextEffectsBeneathStatusBarWindowLevel",
    "VTCopyAV1DecoderCapabilitiesDictionary",
    "VTCopyHEVCDecoderCapabilitiesDictionary",
    "VTGetDefaultColorAttributesWithHints",
    "VTGetGVADecoderAvailability",
    "VTImageRotationSessionCreate",
    "VTImageRotationSessionSetProperty",
    "VTImageRotationSessionTransferImage",
    "VTPixelBufferConformerCopyConformedPixelBuffer",
    "VTPixelBufferConformerCreateWithAttributes",
    "VTPixelBufferConformerIsConformantPixelBuffer",
    "VTRestrictVideoDecoders",
    "VTSelectAndCreateVideoDecoderInstance",
    "WPNotificationUserInfoResourceTypeKey",
    "WPResourceDataChangedNotificationName",
    "_AXSEnhanceTextLegibilityEnabled",
    "_CFCachedURLResponseGetMemMappedData",
    "_CFCachedURLResponseSetBecameFileBackedCallBackBlock",
    "_CFCopySystemVersionDictionary",
    "_CFHTTPCookieStorageGetDefault",
    "_CFHostIsDomainTopLevel",
    "_CFNetworkHTTPConnectionCacheGetLimit",
    "_CFNetworkHTTPConnectionCacheSetLimit",
    "_CFRunLoopSetPerCalloutAutoreleasepoolEnabled",
    "_CFURLRequestSetProtocolProperty",
    "_CFURLRequestSetStorageSession",
    "_CFURLResponseGetSSLCertificateContext",
    "_CFURLStorageSessionCopyCache",
    "_CFURLStorageSessionCopyCookieStorage",
    "_CFURLStorageSessionCreate",
    "_CFURLStorageSessionDisableCache",
    "_kCFSystemVersionProductVersionKey",
    "_kCFURLCachePartitionKey",
    "_kCFURLConnectionPropertyShouldSniff",
    "_kCFURLStorageSessionIsPrivate",
    "kAXSEnhanceTextLegibilityChangedNotification",
    "kCAContentsFormatRGBA10XR",
    "kCAFilterColorBurnBlendMode",
    "kCAFilterColorDodgeBlendMode",
    "kCAFilterColorHueRotate",
    "kCAFilterColorMatrix",
    "kCAFilterColorMonochrome",
    "kCAFilterColorSaturate",
    "kCAFilterDarkenBlendMode",
    "kCAFilterDifferenceBlendMode",
    "kCAFilterExclusionBlendMode",
    "kCAFilterGaussianBlur",
    "kCAFilterHardLightBlendMode",
    "kCAFilterLightenBlendMode",
    "kCAFilterMultiplyBlendMode",
    "kCAFilterOverlayBlendMode",
    "kCAFilterPlusD",
    "kCAFilterPlusL",
    "kCAFilterScreenBlendMode",
    "kCAFilterSoftLightBlendMode",
    "kCFURLRequestAllowAllPOSTCaching",
    "kCGGradientInterpolatesPremultiplied",
    "kCGImageSourceShouldPreferRGB32",
    "kCGImageSourceSkipMetadata",
    "kCGImageSourceUseHardwareAcceleration",
    "kCTFontCSSFamilyCursive",
    "kCTFontCSSFamilyFantasy",
    "kCTFontCSSFamilyMonospace",
    "kCTFontCSSFamilySansSerif",
    "kCTFontCSSFamilySerif",
    "kCTFontCSSWeightAttribute",
    "kCTFontCSSWidthAttribute",
    "kCTFontContentSizeCategoryL",
    "kCTFontDescriptorLanguageAttribute",
    "kCTFontDescriptorTextStyleAttribute",
    "kCTFontFallbackOptionAttribute",
    "kCTFontGradeTrait",
    "kCTFontIgnoreLegibilityWeightAttribute",
    "kCTFontPaletteAttribute",
    "kCTFontPaletteColorsAttribute",
    "kCTFontPostScriptNameAttribute",
    "kCTFontReferenceURLAttribute",
    "kCTFontSizeCategoryAttribute",
    "kCTFontTrackAttribute",
    "kCTFontUIFontDesignDefault",
    "kCTFontUIFontDesignMonospaced",
    "kCTFontUIFontDesignRounded",
    "kCTFontUIFontDesignSerif",
    "kCTFontUIFontDesignTrait",
    "kCTFontUnscaledTrackingAttribute",
    "kCTFontUserInstalledAttribute",
    "kCTFontWeightBlack",
    "kCTFontWeightBold",
    "kCTFontWeightHeavy",
    "kCTFontWeightLight",
    "kCTFontWeightMedium",
    "kCTFontWeightRegular",
    "kCTFontWeightSemibold",
    "kCTFontWeightThin",
    "kCTFontWeightUltraLight",
    "kCTFontWidthCondensed",
    "kCTFontWidthExpanded",
    "kCTFontWidthExtraCompressed",
    "kCTFontWidthExtraCondensed",
    "kCTFontWidthExtraExpanded",
    "kCTFontWidthSemiCondensed",
    "kCTFontWidthSemiExpanded",
    "kCTFontWidthStandard",
    "kCTFontWidthUltraCompressed",
    "kCTUIFontTextStyleBody",
    "kCTUIFontTextStyleCaption1",
    "kCTUIFontTextStyleCaption2",
    "kCTUIFontTextStyleFootnote",
    "kCTUIFontTextStyleHeadline",
    "kCTUIFontTextStyleShortBody",
    "kCTUIFontTextStyleShortCaption1",
    "kCTUIFontTextStyleShortFootnote",
    "kCTUIFontTextStyleShortHeadline",
    "kCTUIFontTextStyleShortSubhead",
    "kCTUIFontTextStyleSubhead",
    "kCTUIFontTextStyleTallBody",
    "kCTUIFontTextStyleTitle0",
    "kCTUIFontTextStyleTitle1",
    "kCTUIFontTextStyleTitle2",
    "kCTUIFontTextStyleTitle3",
    "kCTUIFontTextStyleTitle4",
    "kDDContextMenuWantsPreviewKey",
    "kDataDetectorsLeadingText",
    "kDataDetectorsReferenceDateKey",
    "kDataDetectorsTrailingText",
    "kIOSurfaceAcceleratorUnwireSurfaceKey",
    "kMAXCaptionAppearanceSettingsChangedNotification",
    "kMRMediaRemoteNowPlayingInfoAlbum",
    "kMRMediaRemoteNowPlayingInfoArtist",
    "kMRMediaRemoteNowPlayingInfoArtworkData",
    "kMRMediaRemoteNowPlayingInfoArtworkDataHeight",
    "kMRMediaRemoteNowPlayingInfoArtworkDataWidth",
    "kMRMediaRemoteNowPlayingInfoArtworkIdentifier",
    "kMRMediaRemoteNowPlayingInfoArtworkMIMEType",
    "kMRMediaRemoteNowPlayingInfoDuration",
    "kMRMediaRemoteNowPlayingInfoElapsedTime",
    "kMRMediaRemoteNowPlayingInfoPlaybackRate",
    "kMRMediaRemoteNowPlayingInfoTitle",
    "kMRMediaRemoteNowPlayingInfoUniqueIdentifier",
    "kMRMediaRemoteOptionPlaybackPosition",
    "kMRMediaRemoteOptionSkipInterval",
    "kMTSupportNotification_ShouldPlayHDRVideoChanged",
    "kQLPreviewOptionPasswordKey",
    "kVTDecoderCapability_ChromaSubsampling",
    "kVTDecoderCapability_ColorDepth",
    "kVTDecoderCodecCapability_PerProfileSupport",
    "kVTDecoderCodecCapability_SupportedProfiles",
    "kVTDecoderProfileCapability_IsHardwareAccelerated",
    "kVTDecoderProfileCapability_MaxDecodeLevel",
    "kVTDecoderProfileCapability_MaxHDRPlaybackLevel",
    "kVTDecoderProfileCapability_MaxPlaybackLevel",
    "kVTDolbyVisionDecoderCapability_IsHardwareAccelerated",
    "kVTDolbyVisionDecoderCapability_SupportedLevels",
    "kVTDolbyVisionDecoderCapability_SupportedProfiles",
    "kVTHEVCDecoderCapability_PerProfileSupport",
    "kVTHEVCDecoderCapability_SupportedProfiles",
    "kVTHEVCDecoderProfileCapability_IsHardwareAccelerated",
    "kVTHEVCDecoderProfileCapability_MaxDecodeLevel",
    "kVTHEVCDecoderProfileCapability_MaxPlaybackLevel",
    "kVTImageRotationPropertyKey_EnableHighSpeedTransfer",
    "kVTImageRotationPropertyKey_FlipHorizontalOrientation",
    "kVTImageRotationPropertyKey_FlipVerticalOrientation",
    "kVTPixelTransferPropertyKey_EnableHardwareAcceleratedTransfer",
    "kVTPixelTransferPropertyKey_EnableHighSpeedTransfer",
    "nw_array_get_count",
    "nw_array_get_object_at_index",
    "nw_context_create",
    "nw_context_set_privacy_level",
    "nw_endpoint_get_known_tracker_name",
    "nw_parameters_set_context",
    "nw_resolver_cancel",
    "nw_resolver_set_update_handler",
    "vk_cgImageRemoveBackground",
    "vk_cgImageRemoveBackgroundWithDownsizing",
    "CFStringGetRangeOfCharacterClusterAtIndex",
]
