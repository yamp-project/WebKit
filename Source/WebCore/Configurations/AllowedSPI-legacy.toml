# Longstanding SPI used by WebCore before we started auditing SPI use.
# NEVER add to this list, only remove!

[[legacy]]
classes = [
    "CTEmojiImageAsset",
    "CTEmojiImageStrike",
]
selectors = [
    { name = "alignmentInset", class = "?" },
    { name = "cgImage", class = "?" },
    { name = "initWithContentIdentifier:shortDescription:strikeImages:", class = "?" },
    { name = "initWithImage:alignmentInset:provenanceInfo:", class = "?" },
    { name = "provenance", class = "?" },
    { name = "strikes", class = "?" },
]
requires = ["ENABLE_MULTI_REPRESENTATION_HEIC"]

# This is SPI, but it's marked as public on 26.x releases due to rdar://148943382.
[[legacy]]
selectors = [
    { name = "isSystemVoice", class = "?" },
]
requires = ["!SDKDB_HAS_148943382"]

[[legacy]]
classes = [
    "WCRBrowserEngineClient",
]
selectors = [
    { name = "allowURL:withCompletion:", class = "?" },
    { name = "evaluateURL:withCompletion:onCompletionQueue:", class = "?" },
    { name = "shouldEvaluateURLs", class = "?" },
]
requires = ["HAVE_WEBCONTENTRESTRICTIONS"]

[[legacy]]
selectors = [
    { name = "_getCookiesForPartition:completionHandler:", class = "?" },
]
requires = ["HAVE_ALLOW_ONLY_PARTITIONED_COOKIES"]

[[legacy]]
symbols = [
    "_CGImageGetContentAverageLightLevelNits",
    "_kCGConstrainedDynamicRange",
    "_kCGContentEDRStrength",
]
requires = ["HAVE_SUPPORT_HDR_DISPLAY_APIS"]
[[legacy]]
classes = [
    "LockdownModeManager",
]
requires = ["HAVE_LOCKDOWN_MODE_FRAMEWORK"]

[[legacy]]
symbols = [
    "_AVContentKeyRequestRandomDeviceIdentifierSeedKey",
    "_AVContentKeyRequestShouldRandomizeDeviceIdentifierKey",
]
requires = ["!HAVE_AVCONTENTKEYREQUEST_RANDOMIZATION_API"]

[[legacy]]
symbols = [
    "_kCMFormatDescriptionProjectionKind_AppleImmersiveVideo",
    "_kCMFormatDescriptionProjectionKind_ParametricImmersive",
    "_kCMFormatDescriptionExtension_CameraCalibrationDataLensCollection",
    "_CMTaggedBufferGroupFormatDescriptionCreateForTaggedBufferGroupWithExtensions",
]
requires = ["!HAVE_SPATIAL_FORMAT_DESCRIPTION_API"]

# The public iOS build uses CGGeometry methods instead of internal only
# NSGeometry methods. Clean up in rdar://6669434.
[[legacy]]
symbols = [
    "_NSEqualRects",
]
requires = ["USE_APPLE_INTERNAL_SDK"]

[[legacy]]
selectors = [
    { name = "_setTitle:", class = "?" },
    { name = "_title", class = "?" },
]
requires = ["!HAVE_LINK_PRESENTATION_CHANGE_FOR_RADAR_115801517"]

[[legacy]]
symbols = [
    "_nw_webtransport_options_add_connect_request_header",
    "_nw_webtransport_metadata_get_session_error_code",
    "_nw_webtransport_metadata_set_session_error_code",
    "_nw_webtransport_metadata_get_session_error_message",
    "_nw_webtransport_metadata_set_session_error_message",
]
requires = ["HAVE_WEB_TRANSPORT"]

# ------------------------------------------------------------------------
# Below are uncategorized and unconditionally used SPI introduced in older
# releases.
# ------------------------------------------------------------------------

[[legacy]]
classes = [
    "NSTextBlock",
]
selectors = [
    { name = "allowsHeadTrackedSpatialAudio", class = "?" },
    { name = "borderColorForEdge:", class = "?" },
    { name = "collapsesBorders", class = "?" },
    { name = "hidesEmptyCells", class = "?" },
    { name = "layoutAlgorithm", class = "?" },
    { name = "newSharedEventWithMachPort:", class = "?" },
    { name = "setBrowserAuditToken:", class = "?" },
    { name = "supportsHeadTrackedSpatialAudio", class = "?" },
    { name = "transferVideoViewTo:", class = "?" },
    { name = "valueForDimension:", class = "?" },
    { name = "verticalAlignment", class = "?" },
    { name = "widthForLayer:edge:", class = "?" },
]
symbols = [
    "_CAIOSurfaceReloadColorAttributes",
    "_CGIOSurfaceContextGetSurface",
    "_CGIOSurfaceContextInvalidateSurface",
    "_CGPathAddContinuousRoundedRect",
    "_DDResultGetRange",
    "_PFMetadataImageSourceIsSpatialMedia",
    "_VTGetHEVCCapabilitesForFormatDescription",
    "__UIKitGetTextEffectsCatalog",
    "_kCAFilterColorBlendMode",
    "_kCAFilterHueBlendMode",
    "_kCAFilterLuminosityBlendMode",
    "_kCAFilterSaturationBlendMode",
    "_kCVPixelBufferPreferRealTimeCacheModeIfEveryoneDoesKey",
    "_kMRMediaRemoteCommandInfoPreferredIntervalsKey",
]

[[legacy]]
selectors = [
    { name = "initWithWebsiteIdentifier:", class = "?" },
]
requires = ["USE_APPLE_INTERNAL_SDK"]

[[legacy]]
classes = [
    "AVAssetCollection",
    "AVContentKeyReportGroup",
    "AVOutputContext",
    "AVPlayerController",
    "AVStreamDataParser",
    "AVSystemController",
    "AVValueTiming",
    "CABackdropLayer",
    "CAFilter",
    "CALayerHost",
    "CPNetworkObserver",
    "DDContextMenuAction",
    "DDContextMenuConfiguration",
    "DDDetectionController",
    "DDScannerResult",
    "LPFileMetadata",
    "LSBundleProxy",
    "LTUISourceMeta",
    "LTUITranslationViewController",
    "MCProfileConnection",
    "NEFilterSource",
    "NSColor",
    "NSTextTable",
    "NSTextTableBlock",
    "NSURLFileTypeMappings",
    "PKDisbursementPaymentRequest",
    "PKPaymentInstallmentConfiguration",
    "PKPaymentInstallmentItem",
    "PKPaymentSetupConfiguration",
    "PKPaymentSetupController",
    "PKPaymentSetupFeature",
    "PKPaymentSetupRequest",
    "PKPaymentSetupViewController",
    "PKShippingMethods",
    "QLItem",
    "QLPreviewConverter",
    "RSABSSATokenBlinder",
    "RVItem",
    "RVPresenter",
    "RVPresentingContext",
    "RVSelection",
    "SBSStatusBarStyleOverridesAssertion",
    "SBSStatusBarStyleOverridesCoordinator",
    "SOAuthorization",
    "SOAuthorizationHints",
    "SOAuthorizationHintsCore",
    "STDynamicActivityAttributionPublisher",
    "UIFocusRingStyle",
    "UITextEffectsWindow",
    "VKCImageAnalysis",
    "VKCImageAnalysisInteraction",
    "VKCImageAnalysisOverlayView",
    "VKCImageAnalyzer",
    "VKCImageAnalyzerRequest",
    "VKCRemoveBackgroundRequest",
    "VKCRemoveBackgroundRequestHandler",
    "VKCRemoveBackgroundResult",
    "VKImageAnalyzer",
    "VKImageAnalyzerRequest",
    "WPLinkFilteringData",
    "WPResourceRequestOptions",
    "WPResources",
    "WPStorageAccessPromptQuirk",
    "WPStorageAccessPromptQuirksData",
    "WPStorageAccessUserAgentStringQuirkData",
    "WebFilterEvaluator",
    "__AVPlayerLayerView",
]
selectors = [
    { name = "MIMETypeForExtension:", class = "?" },
    { name = "RTFDFromRange:documentAttributes:", class = "?" },
    { name = "RTFFromRange:documentAttributes:", class = "?" },
    { name = "URLSession", class = "?" },
    { name = "URLSessionDataDelegate", class = "?" },
    { name = "URLSessionDataDelegateQueue", class = "?" },
    { name = "_CFCachedURLResponse", class = "?" },
    { name = "_CFURLRequest", class = "?" },
    { name = "_CFURLResponse", class = "?" },
    { name = "_GetInternalCFHTTPCookie", class = "?" },
    { name = "__openXPC_and_CBApplicationDidBecomeActive__", class = "?" },
    { name = "_accessibilityUnregister", class = "?" },
    { name = "_attributedStringForRange:", class = "?" },
    { name = "_cf2nsCookies:", class = "?" },
    { name = "_classicMode", class = "?" },
    { name = "_cookieForSetCookieString:forURL:partition:", class = "?" },
    { name = "_cookieStorage", class = "?" },
    { name = "_didFinishScrollingOrZooming", class = "?" },
    { name = "_disambiguated_due_to_CIImage_colorWithCGColor:", class = "?" },
    { name = "_dispatchTileDidDraw:", class = "?" },
    { name = "_getCookiesForDomain:", class = "?" },
    { name = "_getCookiesForURL:mainDocumentURL:partition:policyProperties:completionHandler:", class = "?" },
    { name = "_hardwareKeyboard", class = "?" },
    { name = "_htmlDocumentFragmentString:documentAttributes:subresources:", class = "?" },
    { name = "_initWithCFCachedURLResponse:", class = "?" },
    { name = "_initWithCFHTTPCookieStorage:", class = "?" },
    { name = "_initWithCFURLRequest:", class = "?" },
    { name = "_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:", class = "?" },
    { name = "_initializeScriptDOMNodeImp", class = "?" },
    { name = "_isClassic", class = "?" },
    { name = "_isHostedInAnotherProcess", class = "?" },
    { name = "_performAsDataOwner:block:", class = "?" },
    { name = "_privacyProxyFailClosedForUnreachableNonMainHosts", class = "?" },
    { name = "_propertyForKey:", class = "?" },
    { name = "_protocolClassForRequest:skipAppSSO:", class = "?" },
    { name = "_referenceBounds", class = "?" },
    { name = "_saveCookies:", class = "?" },
    { name = "_scheduleRenderingUpdateForPendingTileCacheRepaint", class = "?" },
    { name = "_schemeWasUpgradedDueToDynamicHSTS", class = "?" },
    { name = "_setCookies:forURL:mainDocumentURL:policyProperties:", class = "?" },
    { name = "_setCookiesChangedHandler:onQueue:", class = "?" },
    { name = "_setCookiesRemovedHandler:onQueue:", class = "?" },
    { name = "_setIdleTimerDisabled:forReason:", class = "?" },
    { name = "_setIgnoreAppSupportedOrientations:", class = "?" },
    { name = "_setMIMEType:", class = "?" },
    { name = "_setMaximumRecognitionDuration:", class = "?" },
    { name = "_setPreventsSleepDuringVideoPlayback:", class = "?" },
    { name = "_setPrivacyProxyFailClosedForUnreachableNonMainHosts:", class = "?" },
    { name = "_setProperty:forKey:", class = "?" },
    { name = "_setSubscribedDomainsForCookieChanges:", class = "?" },
    { name = "_setSuppressesAudioRendering:", class = "?" },
    { name = "_setUseEnhancedPrivacyMode:", class = "?" },
    { name = "_standardMarkerAttributesForAttributes:", class = "?" },
    { name = "_storagePartition", class = "?" },
    { name = "_strictlyUnarchivedObjectOfClasses:fromData:error:", class = "?" },
    { name = "_useEnhancedPrivacyMode", class = "?" },
    { name = "_web_URLWithString:relativeToURL:", class = "?" },
    { name = "_web_createFileAtPath:contents:attributes:", class = "?" },
    { name = "_web_localizedDescription", class = "?" },
    { name = "_webcore_releaseOnWebThread", class = "?" },
    { name = "_webcore_releaseWithWebThreadLock", class = "?" },
    { name = "_willStartScrollingOrZooming", class = "?" },
    { name = "acquireWithHandler:invalidationHandler:", class = "?" },
    { name = "activateTokenWithServerResponse:error:", class = "?" },
    { name = "addData:", class = "?" },
    { name = "addNetworkReachableObserver:selector:", class = "?" },
    { name = "addStreamDataParser:", class = "?" },
    { name = "alphaComponent", class = "?" },
    { name = "alphaThreshold", class = "?" },
    { name = "appendStreamData:", class = "?" },
    { name = "appendStreamData:withFlags:", class = "?" },
    { name = "applicationMetadata", class = "?" },
    { name = "apr", class = "?" },
    { name = "assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:", class = "?" },
    { name = "assetCacheWithURL:", class = "?" },
    { name = "attributeKeys", class = "?" },
    { name = "bindToken", class = "?" },
    { name = "bindingTotalAmount", class = "?" },
    { name = "blindedMessage", class = "?" },
    { name = "borderThickness", class = "?" },
    { name = "bundleProxyWithAuditToken:error:", class = "?" },
    { name = "canParseExtendedMIMEType:", class = "?" },
    { name = "colorWithCalibratedRed:green:blue:alpha:", class = "?" },
    { name = "columnSpan", class = "?" },
    { name = "containsAttachments", class = "?" },
    { name = "contentDispositionEncodingFallbackArray", class = "?" },
    { name = "contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:storageDirectoryAtURL:", class = "?" },
    { name = "coreResult", class = "?" },
    { name = "createFencePort", class = "?" },
    { name = "createPluginBindingsInstance:", class = "?" },
    { name = "currentTimeStamp", class = "?" },
    { name = "currentValue", class = "AVValueTiming" },
    { name = "dataComplete", class = "?" },
    { name = "defaultContentKeyGroup", class = "?" },
    { name = "deviceFeatures", class = "?" },
    { name = "document:attachment:forURL:", class = "?" },
    { name = "earliestAvailablePixelBufferItemTime", class = "?" },
    { name = "eligibleForBTSmartRoutingConsideration", class = "?" },
    { name = "extensionsForMIMEType:", class = "?" },
    { name = "feature", class = "?" },
    { name = "filterRequired", class = "?" },
    { name = "filterState", class = "?" },
    { name = "filterWithType:", class = "?" },
    { name = "finalizeForWebScript", class = "?" },
    { name = "finishConverting", class = "?" },
    { name = "finishedAppendingData", class = "?" },
    { name = "finishedLoadingWithDecisionHandler:", class = "?" },
    { name = "fontWithFamilyName:traits:size:", class = "?" },
    { name = "highlightRange", class = "?" },
    { name = "initAuxiliarySession", class = "?" },
    { name = "initWithAssumedIdentity:", class = "?" },
    { name = "initWithConnection:delegate:response:options:", class = "?" },
    { name = "initWithData:name:uti:options:", class = "?" },
    { name = "initWithDecisionQueue:", class = "?" },
    { name = "initWithFileType:error:", class = "?" },
    { name = "initWithFileWrapper:", class = "?" },
    { name = "initWithMediaEnvironment:", class = "?" },
    { name = "initWithPlayerLayerView:", class = "?" },
    { name = "initWithPublicKey:error:", class = "?" },
    { name = "initWithRTF:documentAttributes:", class = "?" },
    { name = "initWithRTFD:documentAttributes:", class = "?" },
    { name = "initWithResponse:", class = "?" },
    { name = "initWithStorageDirectoryAtURL:", class = "?" },
    { name = "initWithTable:startingRow:rowSpan:startingColumn:columnSpan:", class = "?" },
    { name = "initWithText:selectedRange:", class = "?" },
    { name = "initWithType:location:", class = "?" },
    { name = "installmentAuthorizationToken", class = "?" },
    { name = "installmentItemType", class = "?" },
    { name = "installmentItems", class = "?" },
    { name = "installmentMerchantIdentifier", class = "?" },
    { name = "invokeDefaultMethodWithArguments:", class = "?" },
    { name = "invokeUndefinedMethodFromWebScript:withArguments:", class = "?" },
    { name = "isInStorePurchase", class = "?" },
    { name = "isKeyExcludedFromWebScript:", class = "?" },
    { name = "isManagedSession", class = "?" },
    { name = "isNetworkReachable", class = "?" },
    { name = "isPlayableExtendedMIMEType:options:", class = "?" },
    { name = "isSelectorExcludedFromWebScript:", class = "?" },
    { name = "keyId", class = "?" },
    { name = "lastModifiedDateOfEntryForKey:", class = "?" },
    { name = "makeContentKeyGroup", class = "?" },
    { name = "maxAlpha", class = "?" },
    { name = "merchandisingImageData", class = "?" },
    { name = "objectForWebScript", class = "?" },
    { name = "openToBuyThresholdAmount", class = "?" },
    { name = "optionID", class = "?" },
    { name = "outputContextForID:", class = "?" },
    { name = "outputDevice", class = "?" },
    { name = "outputDevices", class = "?" },
    { name = "outputMIMECodecParameterForInputMIMECodecParameter:", class = "?" },
    { name = "pictureInPicturePlayerLayerView", class = "?" },
    { name = "pointValue", class = "?" },
    { name = "preferredExtensionForMIMEType:", class = "?" },
    { name = "prerollDecodeWithCompletionHandler:", class = "?" },
    { name = "previewFileName", class = "?" },
    { name = "previewRequest", class = "?" },
    { name = "previewResponse", class = "?" },
    { name = "previewUTI", class = "?" },
    { name = "processContentKeyRequestInitializationData:options:", class = "?" },
    { name = "processContentKeyResponseData:", class = "?" },
    { name = "programIdentifier", class = "?" },
    { name = "programTerms", class = "?" },
    { name = "providePendingMediaData", class = "?" },
    { name = "receivedData:decisionHandler:", class = "?" },
    { name = "receivedResponse:decisionHandler:", class = "?" },
    { name = "referrerIdentifier", class = "?" },
    { name = "regionBeingDrawn", class = "?" },
    { name = "registerForPostingNotificationsWithContext:", class = "?" },
    { name = "reloadValueForKeyPath:", class = "?" },
    { name = "remediateWithDecisionHandler:", class = "?" },
    { name = "removeEntryForKey:", class = "?" },
    { name = "removeStreamDataParser:", class = "?" },
    { name = "requestNotificationOfMediaDataChangeAsSoonAsPossible", class = "?" },
    { name = "resolvedURL", class = "?" },
    { name = "resultsFromCoreResults:", class = "?" },
    { name = "retailChannel", class = "?" },
    { name = "revealRangeAtIndex:selectedRanges:shouldUpdateSelection:", class = "?" },
    { name = "routingContextUID", class = "?" },
    { name = "rowSpan", class = "?" },
    { name = "safeRequestForRequest:", class = "?" },
    { name = "scrollView:shouldScrollToPoint:", class = "?" },
    { name = "setAllowsHitTesting:", class = "?" },
    { name = "setApplicationMetadata:", class = "?" },
    { name = "setApr:", class = "?" },
    { name = "setAttribute:forKey:error:", class = "?" },
    { name = "setAuditTokensForProcessAssertion:error:", class = "?" },
    { name = "setBindingTotalAmount:", class = "?" },
    { name = "setBorderColor:forEdge:", class = "?" },
    { name = "setCollapsesBorders:", class = "?" },
    { name = "setContentDispositionEncodingFallbackArray:", class = "?" },
    { name = "setContentsOpaque:", class = "?" },
    { name = "setContextId:", class = "?" },
    { name = "setDefersCallbacks:", class = "?" },
    { name = "setDetectMultipleUtterances:", class = "?" },
    { name = "setEligibleForBTSmartRoutingConsideration:error:", class = "?" },
    { name = "setFeature:", class = "?" },
    { name = "setFencePort:", class = "?" },
    { name = "setHeaderLevel:", class = "?" },
    { name = "setHidesEmptyCells:", class = "?" },
    { name = "setHostProcessAttribution:error:", class = "?" },
    { name = "setInStorePurchase:", class = "?" },
    { name = "setInstallmentItemType:", class = "?" },
    { name = "setInstallmentItems:", class = "?" },
    { name = "setInstallmentMerchantIdentifier:", class = "?" },
    { name = "setLayoutAlgorithm:", class = "?" },
    { name = "setMerchandisingImageData:", class = "?" },
    { name = "setNeedsLayoutOnGeometryChange:", class = "?" },
    { name = "setOpenToBuyThresholdAmount:", class = "?" },
    { name = "setPIPModeEnabled:", class = "?" },
    { name = "setPreferSandboxedParsing:", class = "?" },
    { name = "setPreservesFlip:", class = "?" },
    { name = "setProgramIdentifier:", class = "?" },
    { name = "setProgramTerms:", class = "?" },
    { name = "setReferrerIdentifier:", class = "?" },
    { name = "setRegisteredStyleOverrides:reply:", class = "?" },
    { name = "setResourceConservationLevelWhilePaused:", class = "?" },
    { name = "setRetailChannel:", class = "?" },
    { name = "setSortsSublayers:", class = "?" },
    { name = "setSourceAppIdentifier:", class = "?" },
    { name = "setSourceAppPid:", class = "?" },
    { name = "setTextBlocks:", class = "?" },
    { name = "setThumbstickUserIntentHandler:", class = "?" },
    { name = "setToneMapToStandardDynamicRange:", class = "?" },
    { name = "setURLSession:", class = "?" },
    { name = "setUsesWebKitBehavior:", class = "?" },
    { name = "setValue:type:forDimension:", class = "?" },
    { name = "setVerticalAlignment:", class = "NSTextBlock" },
    { name = "setVideoView:", class = "?" },
    { name = "setWidth:type:forLayer:edge:", class = "?" },
    { name = "sharedAVSystemController", class = "?" },
    { name = "sharedAudioPresentationOutputContext", class = "?" },
    { name = "sharedMappings", class = "?" },
    { name = "sharedNetworkObserver", class = "?" },
    { name = "sharedTextEffectsWindowForWindowScene:", class = "?" },
    { name = "signature", class = "RSABSSATokenReady" },
    { name = "sizeValue", class = "?" },
    { name = "speechVoicesIncludingSuperCompact", class = "?" },
    { name = "startRoutingVideoToPictureInPicturePlayerLayerView", class = "?" },
    { name = "startingColumn", class = "?" },
    { name = "startingRow", class = "?" },
    { name = "stopRoutingVideoToPictureInPicturePlayerLayerView", class = "?" },
    { name = "supportedOptions", class = "?" },
    { name = "supportsMultipleOutputDevices", class = "?" },
    { name = "table", class = "?" },
    { name = "tableCellDefaultSelectionTintColor", class = "?" },
    { name = "textBlocks", class = "?" },
    { name = "tokenContent", class = "?" },
    { name = "tokenWaitingActivationWithContent:error:", class = "?" },
    { name = "unblockWithCompletion:", class = "?" },
    { name = "valueForTimeStamp:", class = "?" },
    { name = "valueTimingWithAnchorValue:anchorTimeStamp:rate:", class = "?" },
    { name = "valueWithCAColorMatrix:", class = "?" },
    { name = "valueWithRect:", class = "?" },
    { name = "videoPerformanceMetrics", class = "?" },
    { name = "videoView", class = "?" },
    { name = "viewControllerForView:", class = "?" },
    { name = "webScriptNameForKey:", class = "?" },
    { name = "webScriptNameForSelector:", class = "?" },
    { name = "willSendRequest:decisionHandler:", class = "?" },
]
symbols = [
    "_AVAssetPrefersSandboxedParsingOptionKey",
    "_AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout",
    "_AVController_RouteDescriptionKey_AVAudioRouteName",
    "_AVController_RouteDescriptionKey_RouteCurrentlyPicked",
    "_AVController_RouteDescriptionKey_RouteName",
    "_AVOutOfBandAlternateTrackDisplayNameKey",
    "_AVOutOfBandAlternateTrackExtendedLanguageTagKey",
    "_AVOutOfBandAlternateTrackIdentifierKey",
    "_AVOutOfBandAlternateTrackIsDefaultKey",
    "_AVOutOfBandAlternateTrackMediaCharactersticsKey",
    "_AVOutOfBandAlternateTrackSourceKey",
    "_AVStreamDataParserContentKeyRequestProtocolVersionsKey",
    "_AVSystemController_PIDToInheritApplicationStateFrom",
    "_AVSystemController_ServerConnectionDiedNotification",
    "_AVURLAssetAllowableAudioCodecTypesKey",
    "_AVURLAssetAllowableCaptionFormatsKey",
    "_AVURLAssetAllowableTypeCategoriesKey",
    "_AVURLAssetAllowableVideoCodecTypesKey",
    "_AVURLAssetBoundNetworkInterfaceName",
    "_AVURLAssetCacheKey",
    "_AVURLAssetClientBundleIdentifierKey",
    "_AVURLAssetDoNotLogURLsKey",
    "_AVURLAssetExtendedMIMETypePlayabilityTreatPlaylistMIMETypesAsISOBMFFMediaDataContainersKey",
    "_AVURLAssetInheritURIQueryComponentFromReferencingURIKey",
    "_AVURLAssetOutOfBandAlternateTracksKey",
    "_AVURLAssetOutOfBandMIMETypeKey",
    "_AVURLAssetRequiresCustomURLLoadingKey",
    "_AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests",
    "_AVURLAssetUseClientURLLoadingExclusively",
    "_AVURLAssetUsesNoPersistentCacheKey",
    "_AVVideoRangeDolbyVisionPQ",
    "_AVVideoRangeHDR10",
    "_AudioComponentApplyServerRegistrations",
    "_AudioComponentFetchServerRegistrations",
    "_AudioDeviceDuck",
    "_AudioGetDeviceSpatialPreferencesForContentType",
    "_CAIOSurfaceCreate",
    "_CCCryptorGCM",
    "_CCCryptorGCMOneshotDecrypt",
    "_CCDeriveKey",
    "_CCECCryptorComputeSharedSecret",
    "_CCECCryptorExportKey",
    "_CCECCryptorGeneratePair",
    "_CCECCryptorImportKey",
    "_CCECCryptorRelease",
    "_CCKDFParametersCreateHkdf",
    "_CCKDFParametersDestroy",
    "_CCRSACryptorCreateFromData",
    "_CCRSACryptorDecrypt",
    "_CCRSACryptorEncrypt",
    "_CCRSACryptorExport",
    "_CCRSACryptorGeneratePair",
    "_CCRSACryptorGetPublicKeyFromPrivateKey",
    "_CCRSACryptorImport",
    "_CCRSACryptorRelease",
    "_CCRSACryptorSign",
    "_CCRSACryptorVerify",
    "_CCRSAGetCRTComponents",
    "_CCRSAGetCRTComponentsSizes",
    "_CCRSAGetKeyComponents",
    "_CCRSAGetKeyType",
    "_CFHTTPCookieStorageCopyCookies",
    "_CFHTTPCookieStorageDeleteAllCookies",
    "_CFHTTPCookieStorageDeleteCookie",
    "_CFHTTPCookieStorageGetCookieAcceptPolicy",
    "_CFHTTPCookieStorageSetCookieAcceptPolicy",
    "_CFReadStreamCreate",
    "_CFReadStreamSignalEvent",
    "_CFURLCacheCopyResponseForRequest",
    "_CFURLCacheCopySharedURLCache",
    "_CFURLCacheMemoryCapacity",
    "_CFURLCacheSetDiskCapacity",
    "_CFURLCacheSetMemoryCapacity",
    "_CFURLRequestCreateMutableCopy",
    "_CFURLRequestGetRequestPriority",
    "_CFURLRequestSetHTTPRequestBody",
    "_CFURLRequestSetHTTPRequestBodyStream",
    "_CFURLRequestSetRequestPriority",
    "_CFURLRequestSetShouldPipelineHTTP",
    "_CFURLRequestSetShouldStartSynchronously",
    "_CFURLResponseCopySuggestedFilename",
    "_CFURLResponseGetHTTPResponse",
    "_CFURLResponseGetMIMEType",
    "_CFURLResponseGetURL",
    "_CFURLResponseSetMIMEType",
    "_CGColorSpaceCopyICCProfileDescription",
    "_CGColorSpaceEqualToColorSpace",
    "_CGColorTransformConvertColorComponents",
    "_CGColorTransformCreate",
    "_CGContextCopyDeviceColorSpace",
    "_CGContextCreateWithDelegate",
    "_CGContextDelegateCreate",
    "_CGContextDelegateGetInfo",
    "_CGContextDelegateSetCallback",
    "_CGContextDrawPDFPageWithAnnotations",
    "_CGContextDrawPathDirect",
    "_CGContextGetBaseCTM",
    "_CGContextGetCompositeOperation",
    "_CGContextGetFillColorAsColor",
    "_CGContextGetFontAntialiasingStyle",
    "_CGContextGetShouldAntialias",
    "_CGContextGetStrokeColorAsColor",
    "_CGContextGetType",
    "_CGContextSetBaseCTM",
    "_CGContextSetCTM",
    "_CGContextSetCompositeOperation",
    "_CGContextSetFontAntialiasingStyle",
    "_CGContextSetOwnerIdentity",
    "_CGContextSetShouldAntialiasFonts",
    "_CGContextSetStyle",
    "_CGGStateGetAlpha",
    "_CGGStateGetCTM",
    "_CGGStateGetFillColor",
    "_CGGStateGetFont",
    "_CGGStateGetFontSize",
    "_CGGStateGetStrokeColor",
    "_CGGStateGetStyle",
    "_CGGradientCreateWithColorComponentsAndOptions",
    "_CGIOSurfaceContextCreate",
    "_CGIOSurfaceContextCreateImage",
    "_CGIOSurfaceContextCreateImageReference",
    "_CGIOSurfaceContextGetColorSpace",
    "_CGImageGetCachingFlags",
    "_CGImageSetCachingFlags",
    "_CGImageSetProperty",
    "_CGImageSourceGetTypeWithData",
    "_CGPathAddUnevenCornersRoundedRect",
    "_CGPatternCreateWithImage2",
    "_CGSNextRect",
    "_CGSRegionEnumerator",
    "_CGSReleaseRegionEnumerator",
    "_CGShadingCreateConic",
    "_CGStyleCreateColorMatrix",
    "_CGStyleCreateFocusRingWithColor",
    "_CGStyleCreateGaussianBlur",
    "_CGStyleCreateShadow2",
    "_CGStyleGetColor",
    "_CGStyleGetData",
    "_CGStyleGetType",
    "_CTFontCopyColorGlyphCoverage",
    "_CTFontCopyGlyphCoverageForFeature",
    "_CTFontCreateForCharactersWithLanguageAndOption",
    "_CTFontDescriptorCreateForCSSFamily",
    "_CTFontDescriptorCreateForUIType",
    "_CTFontDescriptorCreateLastResort",
    "_CTFontDescriptorCreateWithAttributesAndOptions",
    "_CTFontDescriptorCreateWithTextStyle",
    "_CTFontDescriptorCreateWithTextStyleAndAttributes",
    "_CTFontDescriptorGetOptions",
    "_CTFontDescriptorGetTextStyleSize",
    "_CTFontDescriptorIsSystemUIFont",
    "_CTFontGetAccessibilityBoldWeightOfWeight",
    "_CTFontGetGlyphsForCharacterRange",
    "_CTFontGetPhysicalSymbolicTraits",
    "_CTFontGetSbixImageSizeForGlyphAndContentsScale",
    "_CTFontGetVerticalGlyphsForCharacters",
    "_CTFontIsAppleColorEmoji",
    "_CTFontIsSystemUIFont",
    "_CTFontManagerCreateMemorySafeFontDescriptorFromData",
    "_CTFontShapeGlyphs",
    "_CTLineCreateWithUniCharProvider",
    "_CTParagraphStyleSetCompositionLanguage",
    "_CTRunGetInitialAdvance",
    "_CTTypesetterCreateWithUniCharProviderAndOptions",
    "_DDBinderEmailKey",
    "_DDBinderFlightInformationKey",
    "_DDBinderGenericURLKey",
    "_DDBinderHttpURLKey",
    "_DDBinderMailURLKey",
    "_DDBinderParsecSourceKey",
    "_DDBinderSignatureBlockKey",
    "_DDBinderTrackingNumberKey",
    "_DDBinderWebURLKey",
    "_DDDFACacheCreateFromFramework",
    "_DDDFAScannerCreateFromCache",
    "_DDDFAScannerFirstResultInUnicharArray",
    "_DDResultDisableURLSchemeChecking",
    "_DDResultGetCategory",
    "_DDResultGetQueryRangeForURLification",
    "_DDResultGetSubResults",
    "_DDResultGetType",
    "_DDResultHasProperties",
    "_DDResultIsPastDate",
    "_DDScanQueryAddLineBreak",
    "_DDScanQueryAddSeparator",
    "_DDScanQueryAddTextFragment",
    "_DDScanQueryCreate",
    "_DDScanQueryCreateFromString",
    "_DDScanQueryGetFragmentMetaData",
    "_DDScannerCopyResultsOptionsForPassiveUse",
    "_DDScannerCopyResultsWithOptions",
    "_DDScannerCreate",
    "_DDScannerEnableOptionalSource",
    "_DDScannerScanQuery",
    "_DDScannerSetQOS",
    "_DDShouldImmediatelyShowActionSheetForResult",
    "_DDShouldImmediatelyShowActionSheetForURL",
    "_DDShouldUseLightLinksForResult",
    "_DDURLStringForResult",
    "_DDURLTapAndHoldSchemes",
    "_FPFontCopyPostScriptName",
    "_FPFontCopySFNTData",
    "_FPFontCreateFontsFromData",
    "_FigPhotoDecompressionSetHardwareCutoff",
    "_FigThreadRegisterAbortAction",
    "_FigThreadUnregisterAbortAction",
    "_FigVideoTargetCreateWithVideoReceiverEndpointID",
    "_GSEventIsHardwareKeyboardAttached",
    "_GSFontInitialize",
    "_GSFontPurgeFontCache",
    "_GSKeyboardGetModifierState",
    "_IOPMAssertionCreateWithDescription",
    "_IOPMAssertionRelease",
    "_IOPSCopyPowerSourcesInfo",
    "_IOPSCopyPowerSourcesList",
    "_IOPSGetPowerSourceDescription",
    "_IOSurfaceAcceleratorCreate",
    "_IOSurfaceAcceleratorGetRunLoopSource",
    "_IOSurfaceAcceleratorTransformSurface",
    "_MAAudibleMediaPrefCopyPreferDescriptiveVideo",
    "_MACaptionAppearanceCopyFontDescriptorWithStrokeForStyle",
    "_MAImageCaptioningCopyCaptionWithSource",
    "_MCFeatureDefinitionLookupAllowed",
    "_MGCopyAnswer",
    "_MGGetBoolAnswer",
    "_MGGetFloat32Answer",
    "_MGGetSInt32Answer",
    "_MRMediaRemoteAddAsyncCommandHandlerBlock",
    "_MRMediaRemoteCommandInfoCreate",
    "_MRMediaRemoteCommandInfoSetCommand",
    "_MRMediaRemoteCommandInfoSetEnabled",
    "_MRMediaRemoteCommandInfoSetOptions",
    "_MRMediaRemoteCopyPickableRoutes",
    "_MRMediaRemoteGetLocalOrigin",
    "_MRMediaRemoteRemoveCommandHandlerBlock",
    "_MRMediaRemoteSetCanBeNowPlayingApplication",
    "_MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin",
    "_MRMediaRemoteSetNowPlayingInfo",
    "_MRMediaRemoteSetNowPlayingInfoWithMergePolicy",
    "_MRMediaRemoteSetNowPlayingVisibility",
    "_MRMediaRemoteSetParentApplication",
    "_MRMediaRemoteSetSupportedCommands",
    "_MTEnableCaption2015Behavior",
    "_MTOverrideShouldPlayHDRVideo",
    "_MTShouldPlayHDRVideo",
    "_MT_GetShouldPlayHDRVideoNotificationSingleton",
    "_NSAuthorDocumentAttribute",
    "_NSCommentDocumentAttribute",
    "_NSCompanyDocumentAttribute",
    "_NSConvertedDocumentAttribute",
    "_NSCopyrightDocumentAttribute",
    "_NSCreationTimeDocumentAttribute",
    "_NSDisplayNameDocumentAttribute",
    "_NSEditorDocumentAttribute",
    "_NSGeneratorDocumentAttribute",
    "_NSKeywordsDocumentAttribute",
    "_NSLocalizedFileSizeDescription",
    "_NSModificationTimeDocumentAttribute",
    "_NSNoIndexDocumentAttribute",
    "_NSSubjectDocumentAttribute",
    "_NSURLAuthenticationMethodOAuth",
    "_OTSVGTableCreateFromData",
    "_OTSVGTableGetDocumentIndexForGlyph",
    "_OTSVGTableRelease",
    "_PKApplePayButtonDefaultCornerRadius",
    "_PKCanMakePaymentsWithMerchantIdentifierAndDomain",
    "_PKCanMakePaymentsWithMerchantIdentifierDomainAndSourceApplication",
    "_PKDrawApplePayButtonWithCornerRadius",
    "_QLPreviewGetSupportedMIMETypes",
    "_QLTypeCopyBestMimeTypeForFileNameAndMimeType",
    "_QLTypeCopyBestMimeTypeForURLAndMimeType",
    "_QLTypeCopyUTIForURLAndMimeType",
    "_SOAuthorizationOptionInitiatingAction",
    "_SOAuthorizationOptionInitiatorOrigin",
    "_SOAuthorizationOptionUserActionInitiated",
    "_SOErrorDomain",
    "_SecCertificateGetSignatureHashAlgorithm",
    "_SecTrustDeserialize",
    "_SecTrustSerialize",
    "_SecTrustSetClientAuditToken",
    "_UIAccessibilityAcceptedInlineTextCompletion",
    "_UIAccessibilityInlineTextCompletion",
    "_UIAccessibilityTokenAttachment",
    "_UIAccessibilityTokenBlockquoteLevel",
    "_UIAccessibilityTokenBold",
    "_UIAccessibilityTokenFontFamily",
    "_UIAccessibilityTokenFontName",
    "_UIAccessibilityTokenFontSize",
    "_UIAccessibilityTokenItalic",
    "_UIAccessibilityTokenLanguage",
    "_UIAccessibilityTokenUnderline",
    "_UITextEffectsBeneathStatusBarWindowLevel",
    "_VTCopyAV1DecoderCapabilitiesDictionary",
    "_VTCopyHEVCDecoderCapabilitiesDictionary",
    "_VTGetDefaultColorAttributesWithHints",
    "_VTGetGVADecoderAvailability",
    "_VTImageRotationSessionCreate",
    "_VTImageRotationSessionSetProperty",
    "_VTImageRotationSessionTransferImage",
    "_VTPixelBufferConformerCopyConformedPixelBuffer",
    "_VTPixelBufferConformerCreateWithAttributes",
    "_VTPixelBufferConformerIsConformantPixelBuffer",
    "_VTRestrictVideoDecoders",
    "_VTSelectAndCreateVideoDecoderInstance",
    "_WPNotificationUserInfoResourceTypeKey",
    "_WPResourceDataChangedNotificationName",
    "__AXSEnhanceTextLegibilityEnabled",
    "__CFCachedURLResponseGetMemMappedData",
    "__CFCachedURLResponseSetBecameFileBackedCallBackBlock",
    "__CFCopySystemVersionDictionary",
    "__CFHTTPCookieStorageGetDefault",
    "__CFHostIsDomainTopLevel",
    "__CFNetworkHTTPConnectionCacheGetLimit",
    "__CFNetworkHTTPConnectionCacheSetLimit",
    "__CFRunLoopSetPerCalloutAutoreleasepoolEnabled",
    "__CFURLRequestSetProtocolProperty",
    "__CFURLRequestSetStorageSession",
    "__CFURLResponseGetSSLCertificateContext",
    "__CFURLStorageSessionCopyCache",
    "__CFURLStorageSessionCopyCookieStorage",
    "__CFURLStorageSessionCreate",
    "__CFURLStorageSessionDisableCache",
    "__UTCopyDeclaredTypeIdentifiers",
    "__kCFSystemVersionProductVersionKey",
    "__kCFURLCachePartitionKey",
    "__kCFURLConnectionPropertyShouldSniff",
    "__kCFURLStorageSessionIsPrivate",
    "_kAXSEnhanceTextLegibilityChangedNotification",
    "_kCAContentsFormatRGBA10XR",
    "_kCAFilterColorBurnBlendMode",
    "_kCAFilterColorDodgeBlendMode",
    "_kCAFilterColorHueRotate",
    "_kCAFilterColorMatrix",
    "_kCAFilterColorMonochrome",
    "_kCAFilterColorSaturate",
    "_kCAFilterDarkenBlendMode",
    "_kCAFilterDifferenceBlendMode",
    "_kCAFilterExclusionBlendMode",
    "_kCAFilterGaussianBlur",
    "_kCAFilterHardLightBlendMode",
    "_kCAFilterLightenBlendMode",
    "_kCAFilterMultiplyBlendMode",
    "_kCAFilterOverlayBlendMode",
    "_kCAFilterPlusD",
    "_kCAFilterPlusL",
    "_kCAFilterScreenBlendMode",
    "_kCAFilterSoftLightBlendMode",
    "_kCFURLRequestAllowAllPOSTCaching",
    "_kCGGradientInterpolatesPremultiplied",
    "_kCGImageSourceShouldPreferRGB32",
    "_kCGImageSourceSkipMetadata",
    "_kCGImageSourceUseHardwareAcceleration",
    "_kCTFontCSSFamilyCursive",
    "_kCTFontCSSFamilyFantasy",
    "_kCTFontCSSFamilyMonospace",
    "_kCTFontCSSFamilySansSerif",
    "_kCTFontCSSFamilySerif",
    "_kCTFontCSSWeightAttribute",
    "_kCTFontCSSWidthAttribute",
    "_kCTFontContentSizeCategoryL",
    "_kCTFontDescriptorLanguageAttribute",
    "_kCTFontDescriptorTextStyleAttribute",
    "_kCTFontFallbackOptionAttribute",
    "_kCTFontGradeTrait",
    "_kCTFontIgnoreLegibilityWeightAttribute",
    "_kCTFontPaletteAttribute",
    "_kCTFontPaletteColorsAttribute",
    "_kCTFontPostScriptNameAttribute",
    "_kCTFontReferenceURLAttribute",
    "_kCTFontSizeCategoryAttribute",
    "_kCTFontTrackAttribute",
    "_kCTFontUIFontDesignDefault",
    "_kCTFontUIFontDesignMonospaced",
    "_kCTFontUIFontDesignRounded",
    "_kCTFontUIFontDesignSerif",
    "_kCTFontUIFontDesignTrait",
    "_kCTFontUnscaledTrackingAttribute",
    "_kCTFontUserInstalledAttribute",
    "_kCTFontWeightBlack",
    "_kCTFontWeightBold",
    "_kCTFontWeightHeavy",
    "_kCTFontWeightLight",
    "_kCTFontWeightMedium",
    "_kCTFontWeightRegular",
    "_kCTFontWeightSemibold",
    "_kCTFontWeightThin",
    "_kCTFontWeightUltraLight",
    "_kCTFontWidthCondensed",
    "_kCTFontWidthExpanded",
    "_kCTFontWidthExtraCompressed",
    "_kCTFontWidthExtraCondensed",
    "_kCTFontWidthExtraExpanded",
    "_kCTFontWidthSemiCondensed",
    "_kCTFontWidthSemiExpanded",
    "_kCTFontWidthStandard",
    "_kCTFontWidthUltraCompressed",
    "_kCTUIFontTextStyleBody",
    "_kCTUIFontTextStyleCaption1",
    "_kCTUIFontTextStyleCaption2",
    "_kCTUIFontTextStyleFootnote",
    "_kCTUIFontTextStyleHeadline",
    "_kCTUIFontTextStyleShortBody",
    "_kCTUIFontTextStyleShortCaption1",
    "_kCTUIFontTextStyleShortFootnote",
    "_kCTUIFontTextStyleShortHeadline",
    "_kCTUIFontTextStyleShortSubhead",
    "_kCTUIFontTextStyleSubhead",
    "_kCTUIFontTextStyleTallBody",
    "_kCTUIFontTextStyleTitle0",
    "_kCTUIFontTextStyleTitle1",
    "_kCTUIFontTextStyleTitle2",
    "_kCTUIFontTextStyleTitle3",
    "_kCTUIFontTextStyleTitle4",
    "_kDDContextMenuWantsPreviewKey",
    "_kDataDetectorsLeadingText",
    "_kDataDetectorsReferenceDateKey",
    "_kDataDetectorsTrailingText",
    "_kIOSurfaceAcceleratorUnwireSurfaceKey",
    "_kMAXCaptionAppearanceSettingsChangedNotification",
    "_kMRMediaRemoteNowPlayingInfoAlbum",
    "_kMRMediaRemoteNowPlayingInfoArtist",
    "_kMRMediaRemoteNowPlayingInfoArtworkData",
    "_kMRMediaRemoteNowPlayingInfoArtworkDataHeight",
    "_kMRMediaRemoteNowPlayingInfoArtworkDataWidth",
    "_kMRMediaRemoteNowPlayingInfoArtworkIdentifier",
    "_kMRMediaRemoteNowPlayingInfoArtworkMIMEType",
    "_kMRMediaRemoteNowPlayingInfoDuration",
    "_kMRMediaRemoteNowPlayingInfoElapsedTime",
    "_kMRMediaRemoteNowPlayingInfoPlaybackRate",
    "_kMRMediaRemoteNowPlayingInfoTitle",
    "_kMRMediaRemoteNowPlayingInfoUniqueIdentifier",
    "_kMRMediaRemoteOptionPlaybackPosition",
    "_kMRMediaRemoteOptionSkipInterval",
    "_kMTSupportNotification_ShouldPlayHDRVideoChanged",
    "_kQLPreviewOptionPasswordKey",
    "_kVTDecoderCapability_ChromaSubsampling",
    "_kVTDecoderCapability_ColorDepth",
    "_kVTDecoderCodecCapability_PerProfileSupport",
    "_kVTDecoderCodecCapability_SupportedProfiles",
    "_kVTDecoderProfileCapability_IsHardwareAccelerated",
    "_kVTDecoderProfileCapability_MaxDecodeLevel",
    "_kVTDecoderProfileCapability_MaxHDRPlaybackLevel",
    "_kVTDecoderProfileCapability_MaxPlaybackLevel",
    "_kVTDolbyVisionDecoderCapability_IsHardwareAccelerated",
    "_kVTDolbyVisionDecoderCapability_SupportedLevels",
    "_kVTDolbyVisionDecoderCapability_SupportedProfiles",
    "_kVTHEVCDecoderCapability_PerProfileSupport",
    "_kVTHEVCDecoderCapability_SupportedProfiles",
    "_kVTHEVCDecoderProfileCapability_IsHardwareAccelerated",
    "_kVTHEVCDecoderProfileCapability_MaxDecodeLevel",
    "_kVTHEVCDecoderProfileCapability_MaxPlaybackLevel",
    "_kVTImageRotationPropertyKey_EnableHighSpeedTransfer",
    "_kVTImageRotationPropertyKey_FlipHorizontalOrientation",
    "_kVTImageRotationPropertyKey_FlipVerticalOrientation",
    "_kVTPixelTransferPropertyKey_EnableHardwareAcceleratedTransfer",
    "_kVTPixelTransferPropertyKey_EnableHighSpeedTransfer",
    "_nw_array_get_count",
    "_nw_array_get_object_at_index",
    "_nw_context_create",
    "_nw_context_set_privacy_level",
    "_nw_endpoint_get_known_tracker_name",
    "_nw_parameters_set_context",
    "_nw_resolver_cancel",
    "_nw_resolver_set_update_handler",
    "_vk_cgImageRemoveBackground",
    "_vk_cgImageRemoveBackgroundWithDownsizing",
    "_CFStringGetRangeOfCharacterClusterAtIndex",
]
