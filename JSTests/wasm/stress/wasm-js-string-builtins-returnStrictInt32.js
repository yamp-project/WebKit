/*
(module
    (import "env" "memory" (memory 1))
    (func $compare (import "wasm:js-string" "compare") (param externref externref) (result i32))

    (func (export "compareAndLoad") (param $a externref) (param $b externref) (result i32)
        (call $compare (local.get $a) (local.get $b))
        (i32.load)
    )
)
*/
const WASM_MODULE_CODE = new Uint8Array([0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x60, 0x02, 0x6f, 0x6f, 0x01, 0x7f, 0x02, 0x28, 0x02, 0x03, 0x65, 0x6e, 0x76, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x00, 0x01, 0x0e, 0x77, 0x61, 0x73, 0x6d, 0x3a, 0x6a, 0x73, 0x2d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x00, 0x00, 0x03, 0x02, 0x01, 0x00, 0x07, 0x12, 0x01, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x00, 0x01, 0x0a, 0x0d, 0x01, 0x0b, 0x00, 0x20, 0x00, 0x20, 0x01, 0x10, 0x00, 0x28, 0x02, 0x00, 0x0b, 0x00, 0x1c, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x01, 0x0a, 0x01, 0x00, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x02, 0x09, 0x01, 0x01, 0x02, 0x00, 0x01, 0x61, 0x01, 0x01, 0x62]);

function main() {
    const memory = new WebAssembly.Memory({
        initial: 1,
    });
    const module = new WebAssembly.Module(WASM_MODULE_CODE, {
        builtins: ['js-string']
    });
    const instance = new WebAssembly.Instance(module, {
        env: {
            memory
        }
    });

    for (let i = 0; i < 10000; i++) {
        try {
            // Should throw an exception and not crash on a load from the comparison result of -1
            const value = instance.exports.compareAndLoad('a', 'b');
        } catch {
        }
    }
}

main();
