
FAIL Literal result assert_equals: expected "12px" but got "--f()"
FAIL Literal result, typed return assert_equals: expected "12px" but got "--f()"
FAIL Literal result, typed return, calc assert_equals: expected "13px" but got "--f()"
FAIL Literal result, typed return, mismatch assert_equals: expected "" but got "--f()"
FAIL Missing result descriptor assert_equals: expected "" but got "--f()"
FAIL Literal result, empty assert_equals: expected "" but got "--f()"
FAIL result cascading behavior assert_equals: expected "24px" but got "--f()"
FAIL Another dashed-function in result assert_equals: expected "12px" but got "--f()"
FAIL Unused argument assert_equals: expected "12px" but got "--f(100px)"
FAIL Single parameter assert_equals: expected "100px" but got "--f(100px)"
FAIL Multiple parameters assert_equals: expected "100px auto red" but got "--f(100px, auto, red)"
FAIL Single parameter, typed assert_equals: expected "100px" but got "--f(100px)"
FAIL Typed parameter with calc() assert_equals: expected "101px" but got "--f(calc(100px + 1px))"
FAIL Untyped parameter with calc() assert_equals: expected "calc(100px + 1px)" but got "--f(calc(100px + 1px))"
FAIL Various typed parameters assert_equals: expected "101px 360deg 1s" but got "--f(calc(100px + 1px), 1turn, 1000ms)"
FAIL Parameter with complex type (auto) assert_equals: expected "auto" but got "--f(auto)"
FAIL Parameter with complex type (px) assert_equals: expected "10px" but got "--f(10px)"
FAIL Passing argument to inner function assert_equals: expected "12px" but got "--f(12px)"
FAIL var() in argument resolved before call assert_equals: expected "calc(100px + 1px)" but got "--f(calc(100px + 1px))"
FAIL var() in argument resolved before call, typed assert_equals: expected "101px" but got "--f(calc(100px + 1px))"
FAIL Argument captures IACVT due to invalid var() assert_equals: expected "PASS" but got ""
FAIL Argument captures IACVT due to invalid var(), typed assert_equals: expected "PASS" but got ""
FAIL Argument captures IACVT due to type mismatch assert_equals: expected "PASS" but got "--f(red)"
FAIL Single parameter with default value assert_equals: expected "PASS" but got "--f()"
FAIL Multiple parameters with defaults assert_equals: expected "1px 5px 3px" but got "--f(1px, 5px)"
FAIL Multiple parameters with defaults, typed assert_equals: expected "1px 5px 3px" but got "--f(1px, 5px)"
FAIL Default referencing another parameter assert_equals: expected "5px 5px" but got "--f(5px)"
FAIL Default referencing another parameter, local interference assert_equals: expected "17px 5px" but got "--f(5px)"
FAIL Default referencing another defaulted parameter assert_equals: expected "5px 5px" but got "--f()"
FAIL Typed default with reference assert_equals: expected "5px 6px" but got "--f()"
FAIL IACVT arguments are defaulted assert_equals: expected "1 2 3" but got ""
FAIL IACVT arguments are defaulted, typed assert_equals: expected "1 2 3" but got ""
FAIL Arguments are defaulted on type mismatch assert_equals: expected "1 2 3" but got "--f(red, 2, 360deg)"
FAIL Unused local assert_equals: expected "1px" but got "--f()"
FAIL Local does not affect outer scope assert_equals: expected "1px 20px" but got "--f() 20px"
FAIL Substituting local in result assert_equals: expected "10px" but got "--f()"
FAIL Substituting multiple locals in result assert_equals: expected "10px 17px" but got "--f()"
FAIL Local referring to another local assert_equals: expected "10px" but got "--f()"
FAIL Locals appearing after result assert_equals: expected "10px" but got "--f()"
FAIL Locals cascading behavior assert_equals: expected "20px" but got "--f()"
FAIL Custom properties are visible inside function assert_equals: expected "10px" but got "--f()"
FAIL Substitute local from outer scope assert_equals: expected "PASS" but got "--f()"
FAIL Substitute argument from outer scope assert_equals: expected "PASS" but got "--f(PASS)"
FAIL Inner argument shadowing outer argument assert_equals: expected "PASS" but got "--f(FAIL)"
FAIL Inner argument shadowing outer local assert_equals: expected "PASS" but got "--f()"
FAIL Inner local shadowing outer argument assert_equals: expected "PASS" but got "--f(FAIL)"
FAIL Inner local shadowing outer local assert_equals: expected "PASS" but got "--f()"
FAIL Referencing outer local containing var() assert_equals: expected "1" but got "--f()"
FAIL Referencing outer typed argument assert_equals: expected "10px" but got "--f()"
FAIL Same function with different scopes assert_equals: expected "1 2 3 0" but got "--one() --two() --three() --f()"
FAIL Referencing local two frames up assert_equals: expected "1" but got "--a()"
FAIL IACVT outer local shadows property assert_equals: expected "PASS" but got "--a()"
FAIL Inner function call should see resolved outer locals assert_equals: expected "10px" but got "--a()"
FAIL Inner function call should see resolved outer locals (reverse) assert_equals: expected "10px" but got "--a()"
FAIL Parameter shadows custom property assert_equals: expected "PASS" but got "--f(PASS)"
FAIL Local shadows parameter assert_equals: expected "PASS" but got "--f(FAIL2)"
FAIL IACVT argument shadows outer scope assert_equals: expected "PASS" but got ""
FAIL IACVT argument shadows outer scope, typed assert_equals: expected "PASS" but got ""
FAIL IACVT argument shadows outer scope, type mismatch assert_equals: expected "PASS" but got "--f(red)"
FAIL Missing only argument assert_equals: expected "" but got "--f()"
FAIL Missing one argument of several assert_equals: expected "" but got "--f(1, 2)"
FAIL Passing list as only argument assert_equals: expected "1px,2px" but got "--f({1px,2px})"
FAIL Passing list as first argument assert_equals: expected "1px, 2px | 3px" but got "--f({1px, 2px}, 3px)"
FAIL Passing list as second argument assert_equals: expected "1px | 2px, 3px" but got "--f(1px, {2px, 3px})"
FAIL Passing comma as argument assert_equals: expected "," but got "--f({,})"
FAIL Passing {} as argument assert_equals: expected "{}" but got "--f({{}})"
FAIL Passing non-whole-value {} as argument assert_equals: expected "foo{}" but got "--f({foo{}})"
FAIL Local variable with initial keyword assert_equals: expected "PASS" but got "--f(PASS)"
FAIL Local variable with initial keyword, defaulted assert_equals: expected "PASS" but got "--f()"
FAIL Local variable with initial keyword, no value via IACVT-capture assert_equals: expected "PASS" but got ""
FAIL Default with initial keyword assert_equals: expected "PASS" but got "--f()"
FAIL initial appearing via fallback assert_equals: expected "PASS" but got "--f()"
FAIL Local variable with inherit keyword assert_equals: expected "PASS" but got "--f(FAIL3)"
FAIL Local variable with inherit keyword (nested) assert_equals: expected "PASS" but got "--g(FAIL4)"
FAIL Inheriting an invalid value assert_equals: expected "PASS" but got "--g()"
FAIL Default with inherit keyword assert_equals: expected "PASS1 PASS2" but got "--f() --f(PASS2)"
FAIL Default with inherit keyword (nested) assert_equals: expected "PASS1 PASS2" but got "--g()"
FAIL Local with the unset keyword assert_equals: expected "PASS" but got "--f()"
FAIL Local with the revert keyword assert_equals: expected "PASS" but got "--f()"
FAIL Local with the revert-layer keyword assert_equals: expected "PASS" but got "--f()"
FAIL initial keyword left unresolved on result descriptor assert_equals: expected "PASS" but got "--f()"
FAIL inherit keyword left unresolved on result descriptor assert_equals: expected "PASS" but got "--f()"
FAIL unset keyword left unresolved on result descriptor assert_equals: expected "PASS" but got "--f()"
FAIL revert keyword left unresolved on result descriptor assert_equals: expected "PASS" but got "--f()"
FAIL revert-layer keyword left unresolved on result descriptor assert_equals: expected "PASS" but got "--f()"
FAIL Keyword can be returned from function into local variable assert_equals: expected "PASS" but got "--g()"
FAIL Can not return CSS-wide keyword as length assert_equals: expected "PASS" but got "--f()"

