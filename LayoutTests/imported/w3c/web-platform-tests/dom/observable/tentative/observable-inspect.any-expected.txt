
PASS inspect(): Provides a pre-subscription subscribe callback
PASS inspect(): Provides a way to tap into the values and completions of the source observable using an observer
PASS inspect(): Error handler does not stop error from being reported to the global, when subscriber does not pass error handler
PASS inspect(): Provides a way to tap into the values and errors of the source observable using an observer. Errors are passed through
PASS inspect(): ObserverCallback passed in
PASS inspect(): Throwing an error in the observer next handler is caught and sent to the error callback of the result observable
PASS inspect(): Throwing an error in the observer error handler in inspect() is caught and sent to the error callback of the result observable
PASS inspect(): Throwing an error in the observer complete handler is caught and sent to the error callback of the result observable
PASS inspect(): Throwing an error in the next handler function in do should be caught and sent to the error callback of the result observable
PASS inspect(): Errors thrown in subscribe() Inspector handler subscribe handler are caught and sent to error callback
PASS inspect(): Provides a way to tap into the moment a source observable is unsubscribed from
PASS inspect(): Inspector abort() handler is not called if the source completes before the result is unsubscribed from
FAIL inspect(): Errors thrown from inspect()'s abort() handler are caught and reported to the global, because the subscription is already closed by the time the handler runs self.when is not a function. (In 'self.when("error")', 'self.when' is undefined)

